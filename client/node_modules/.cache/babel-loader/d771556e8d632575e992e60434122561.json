{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\nconst authedSession = cookies.get(\"authedSession\");\nconst authedToken = cookies.get(\"authedToken\");\nconst checkUser = localStorage.getItem(\"user\");\nconsole.log(authedToken); // const refreshToken = cookies.get(\"refreshToken\");\n\naxios.defaults.withCredentials = true;\n\nconst useAuth = () => {\n  _s();\n\n  const [isUser, setIsUser] = useState(() => {\n    async function getData() {\n      if (!authedSession && checkUser) {\n        try {\n          const response = await axios.post(\"http://localhost:8080/api/auth\", {\n            withCredentials: true\n          });\n          window.location.reload();\n          console.log(response.data);\n        } catch (err) {\n          console.log(\"Error: \" + err);\n        }\n      } else return authedSession;\n    }\n\n    getData();\n  });\n  const [user, setUser] = useState(localStorage.getItem(\"user\"));\n  useEffect(() => {\n    if (checkUser) {\n      console.log(\"checkUser: \", checkUser);\n      const currentUser = JSON.parse(checkUser);\n      setUser(currentUser);\n      setIsUser(authedSession);\n    } else {\n      setUser();\n      setIsUser(false);\n    }\n  }, []); // useEffect(() => {\n  //   console.log(\"User: \", user);\n  //   async function getData() {\n  //     if (!authedSession && checkUser) {\n  //       window.location.reload();\n  //       try {\n  //         const response = await axios.post(\"http://localhost:8080/api/auth\", {\n  //           withCredentials: true,\n  //         });\n  //         console.log(response.data);\n  //       } catch (err) {\n  //         console.log(\"Error: \" + err);\n  //       }\n  //     }\n  //   }\n  //   getData();\n  // });\n\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/login\", JSON.stringify({\n        username,\n        password\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true\n      });\n      window.location.reload();\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      setUser(response.data.user);\n      setIsUser(true);\n    } catch (err) {\n      var _err$response, _err$response2;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        alert(\"An unexpected error occurred. Please try again later.\");\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        alert(\"Missing Username or Password\");\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        alert(\"Incorrect username or password\");\n        console.log(\"Incorrect username or password\");\n      } else {\n        alert(\"Login Failed\");\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    axios.delete(\"http://localhost:8080/api/clear-cookies\");\n    axios.get(\"http://localhost:8080/api/logout\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      withCredential: true\n    }).then(() => {\n      localStorage.clear();\n      console.log(\"Logged out successfully.\");\n    }).catch(() => {\n      console.log(\"An internal server error has occurred.\");\n    });\n    localStorage.clear();\n    setUser(false);\n  };\n\n  return {\n    user,\n    isUser,\n    setUser,\n    setIsUser,\n    handleLogin,\n    handleLogout\n  };\n};\n\n_s(useAuth, \"A4u+Dhr/PcQz3u9sOO8dtNX49NI=\");\n\nexport default useAuth; // TODO: Make a function validateInput that checks\n// const validateInput = (username, password) => {\n//   if (!(username has a number && lowercase letters)) {\n//     return false;\n//   }\n//   if (!(password has numbers && has uppercase letters && lowercase letters)) {\n//     return false;\n//   }\n//\n//   return true;\n// }","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/hooks/useAuth.js"],"names":["useState","useEffect","axios","Cookies","cookies","authedSession","get","authedToken","checkUser","localStorage","getItem","console","log","defaults","withCredentials","useAuth","isUser","setIsUser","getData","response","post","window","location","reload","data","err","user","setUser","currentUser","JSON","parse","handleLogin","username","password","stringify","headers","setItem","alert","status","handleLogout","delete","withCredential","then","clear","catch"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n\nconst authedSession = cookies.get(\"authedSession\");\nconst authedToken = cookies.get(\"authedToken\");\nconst checkUser = localStorage.getItem(\"user\");\nconsole.log(authedToken);\n// const refreshToken = cookies.get(\"refreshToken\");\n\naxios.defaults.withCredentials = true;\n\nconst useAuth = () => {\n  const [isUser, setIsUser] = useState(() => {\n    async function getData() {\n      if (!authedSession && checkUser) {\n        try {\n          const response = await axios.post(\"http://localhost:8080/api/auth\", {\n            withCredentials: true,\n          });\n          window.location.reload();\n          console.log(response.data);\n        } catch (err) {\n          console.log(\"Error: \" + err);\n        }\n      } else return authedSession;\n    }\n    getData();\n  });\n  const [user, setUser] = useState(localStorage.getItem(\"user\"));\n\n  useEffect(() => {\n    if (checkUser) {\n      console.log(\"checkUser: \", checkUser);\n      const currentUser = JSON.parse(checkUser);\n      setUser(currentUser);\n      setIsUser(authedSession);\n    } else {\n      setUser();\n      setIsUser(false);\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   console.log(\"User: \", user);\n  //   async function getData() {\n  //     if (!authedSession && checkUser) {\n  //       window.location.reload();\n  //       try {\n  //         const response = await axios.post(\"http://localhost:8080/api/auth\", {\n  //           withCredentials: true,\n  //         });\n  //         console.log(response.data);\n  //       } catch (err) {\n  //         console.log(\"Error: \" + err);\n  //       }\n  //     }\n  //   }\n  //   getData();\n  // });\n\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await axios.post(\n        \"http://localhost:8080/api/login\",\n        JSON.stringify({ username, password }),\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          withCredentials: true,\n        }\n      );\n\n      window.location.reload();\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n\n      setUser(response.data.user);\n      setIsUser(true);\n    } catch (err) {\n      if (!err?.response) {\n        alert(\"An unexpected error occurred. Please try again later.\");\n      } else if (err.response?.status === 400) {\n        alert(\"Missing Username or Password\");\n      } else if (err.response?.status === 401) {\n        alert(\"Incorrect username or password\");\n        console.log(\"Incorrect username or password\");\n      } else {\n        alert(\"Login Failed\");\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    axios.delete(\"http://localhost:8080/api/clear-cookies\");\n    axios\n      .get(\"http://localhost:8080/api/logout\", {\n        headers: { \"Content-Type\": \"application/json\" },\n        withCredential: true,\n      })\n      .then(() => {\n        localStorage.clear();\n        console.log(\"Logged out successfully.\");\n      })\n      .catch(() => {\n        console.log(\"An internal server error has occurred.\");\n      });\n\n    localStorage.clear();\n    setUser(false);\n  };\n\n  return {\n    user,\n    isUser,\n    setUser,\n    setIsUser,\n    handleLogin,\n    handleLogout,\n  };\n};\n\nexport default useAuth;\n\n// TODO: Make a function validateInput that checks\n// const validateInput = (username, password) => {\n//   if (!(username has a number && lowercase letters)) {\n//     return false;\n//   }\n//   if (!(password has numbers && has uppercase letters && lowercase letters)) {\n//     return false;\n//   }\n//\n//   return true;\n// }\n"]},"metadata":{},"sourceType":"module"}