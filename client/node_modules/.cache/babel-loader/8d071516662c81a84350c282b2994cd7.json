{"ast":null,"code":"import _asyncToGenerator from\"/Users/chritsophersarmiento/git/my-portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/chritsophersarmiento/git/my-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/chritsophersarmiento/git/my-portfolio/node_modules/@babel/runtime/regenerator/index.js\";import{useState}from\"react\";import axios from\"axios\";var baseUrl=\"https://api.weatherapi.com/v1/current.json\";var apiKey=process.env.REACT_APP_API_KEY;var useWeather=function useWeather(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loader=_useState4[0],setLoader=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),weather=_useState6[0],setWeather=_useState6[1];var getData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(location){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios(\"\".concat(baseUrl),{withCredentials:false,params:{key:apiKey,q:location}});case 3:_context.next=10;break;case 5:_context.prev=5;_context.t0=_context[\"catch\"](0);if(location===\"\"){setError(\"Enter a city\");console.log(_context.t0);}else if(_context.t0.response&&_context.t0.response.status>=\"400\"){setError(\"Sorry, we couldn't find the city you entered.\");console.log(_context.t0);}else{setError(\"An unexpected error occurred.\");console.log(_context.t0);}setLoader(false);return _context.abrupt(\"return\");case 10:_context.next=12;return axios(\"\".concat(baseUrl),{withCredentials:false,params:{key:apiKey,q:location}});case 12:return _context.abrupt(\"return\",_context.sent);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,5]]);}));return function getData(_x){return _ref.apply(this,arguments);};}();var gatherData=function gatherData(data){setLoader(false);setWeather({city:data.location.name,state:data.location.region,country:data.location.country,temperature:data.current.temp_f,conditions:data.current.condition.text,precipitation:data.current.precip_in,icon:data.current.condition.icon,humidity:data.current.humidity,feelsLike:data.current.feelslike_f,windSpeed:data.current.wind_mph,windDirection:data.current.wind_dir,pressure:data.current.pressure_in,visibility:data.current.vis_miles,uvIndex:data.current.uv,date:data.current.last_updated});console.log(data);};var submitRequest=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(location){var response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoader(true);setError(false);_context2.next=4;return getData(location);case 4:response=_context2.sent;if(response){_context2.next=7;break;}return _context2.abrupt(\"return\");case 7:data=response.data;gatherData(data);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function submitRequest(_x2){return _ref2.apply(this,arguments);};}();return{error:error,loader:loader,weather:weather,submitRequest:submitRequest};};export default useWeather;","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/hooks/useWeather.js"],"names":["useState","axios","baseUrl","apiKey","process","env","REACT_APP_API_KEY","useWeather","error","setError","loader","setLoader","weather","setWeather","getData","location","withCredentials","params","key","q","console","log","response","status","gatherData","data","city","name","state","region","country","temperature","current","temp_f","conditions","condition","text","precipitation","precip_in","icon","humidity","feelsLike","feelslike_f","windSpeed","wind_mph","windDirection","wind_dir","pressure","pressure_in","visibility","vis_miles","uvIndex","uv","date","last_updated","submitRequest"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\nconst baseUrl = \"https://api.weatherapi.com/v1/current.json\";\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nconst useWeather = () => {\n  const [error, setError] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [weather, setWeather] = useState(null);\n\n  const getData = async (location) => {\n    try {\n      await axios(`${baseUrl}`, {\n        withCredentials: false,\n        params: { key: apiKey, q: location },\n      });\n    } catch (error) {\n      if (location === \"\") {\n        setError(\"Enter a city\");\n        console.log(error);\n      } else if (error.response && error.response.status >= \"400\") {\n        setError(\"Sorry, we couldn't find the city you entered.\");\n        console.log(error);\n      } else {\n        setError(\"An unexpected error occurred.\");\n        console.log(error);\n      }\n      setLoader(false);\n      return;\n    }\n    return await axios(`${baseUrl}`, {\n      withCredentials: false,\n      params: { key: apiKey, q: location },\n    });\n  };\n\n  const gatherData = (data) => {\n    setLoader(false);\n    setWeather({\n      city: data.location.name,\n      state: data.location.region,\n      country: data.location.country,\n      temperature: data.current.temp_f,\n      conditions: data.current.condition.text,\n      precipitation: data.current.precip_in,\n      icon: data.current.condition.icon,\n      humidity: data.current.humidity,\n      feelsLike: data.current.feelslike_f,\n      windSpeed: data.current.wind_mph,\n      windDirection: data.current.wind_dir,\n      pressure: data.current.pressure_in,\n      visibility: data.current.vis_miles,\n      uvIndex: data.current.uv,\n      date: data.current.last_updated,\n    });\n    console.log(data);\n  };\n\n  const submitRequest = async (location) => {\n    setLoader(true);\n    setError(false);\n\n    const response = await getData(location);\n    if (!response) return;\n\n    const { data } = response;\n    gatherData(data);\n  };\n\n  return {\n    error,\n    loader,\n    weather,\n    submitRequest,\n  };\n};\n\nexport default useWeather;\n"]},"metadata":{},"sourceType":"module"}