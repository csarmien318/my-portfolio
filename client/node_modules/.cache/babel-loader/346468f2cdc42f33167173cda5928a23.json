{"ast":null,"code":"import { rest } from \"msw\";\nimport moment from \"moment\";\nexport const handlers = [rest.post(\"http://localhost:8080/api/auth\", (req, res, ctx) => {\n  return res(ctx.cookie(\"accessToken\", {\n    expires: new Date(new Date().getTime() + 1800 * 1000),\n    origin: \"http://localhost:3000\",\n    sameSite: \"strict\",\n    secure: true,\n    httpOnly: true\n  }), ctx.cookie(\"authedSession\", true, {\n    expires: new Date(new Date().getTime() + 1800 * 1000),\n    origin: \"http://localhost:3000\",\n    sameSite: \"strict\",\n    secure: true\n  }), ctx.status(200), ctx.json({\n    mockToken: \"mockToken\"\n  }));\n}), rest.post(\"http://localhost:8080/api/save\", async (req, res, ctx) => {\n  return res(ctx.delay(500), ctx.json({\n    msg: \"Data has been saved!\"\n  }));\n}), rest.post(\"http://localhost:8080/api/login\", async (req, res, ctx) => {\n  const user = req.body;\n  console.log(user);\n  const {\n    username\n  } = user;\n  const {\n    password\n  } = user;\n  const activeUser = JSON.stringify(user);\n\n  if (username === \"test1000\" && password === \"test1000test\") {\n    return res(ctx.cookie(\"user\", activeUser, {\n      origin: \"http://localhost:3000\",\n      sameSite: \"strict\",\n      secure: true\n    }), ctx.cookie(\"accessToken\", {\n      expires: new Date(new Date().getTime() + 1800 * 1000),\n      origin: \"http://localhost:3000\",\n      sameSite: \"strict\",\n      secure: true,\n      httpOnly: true\n    }), ctx.cookie(\"refreshToken\", {\n      expires: new Date(new Date().getTime() + 31557600000),\n      origin: \"http://localhost:3000\",\n      sameSite: \"strict\",\n      secure: true,\n      httpOnly: true\n    }), ctx.cookie(\"authedSession\", true, {\n      expires: new Date(new Date().getTime() + 1800 * 1000),\n      origin: \"http://localhost:3000\",\n      sameSite: \"strict\",\n      secure: true\n    }), ctx.cookie(\"isAuthed\", true, {\n      expires: new Date(new Date().getTime() + 31557600000),\n      origin: \"http://localhost:3000\",\n      sameSite: \"strict\",\n      secure: true\n    }), ctx.status(202), ctx.json({\n      user\n    }));\n  }\n\n  return res.networkError();\n}), rest.get(\"http://localhost:8080/api/logout\", async (req, res, ctx) => {\n  return res(ctx.json(\"Logout successful\"));\n}), rest.delete(\"http://localhost:8080/api/clear-cookies\", async (req, res, ctx) => {\n  const expires = new Date(moment().subtract(1, \"second\").toDate());\n  return res(ctx.cookie(\"user\", undefined, {\n    expires\n  }), ctx.cookie(\"accessToken\", undefined, {\n    expires\n  }), ctx.cookie(\"refreshToken\", undefined, {\n    expires\n  }), ctx.cookie(\"authedSession\", undefined, {\n    expires\n  }), ctx.cookie(\"isAuthed\", undefined, {\n    expires\n  }), ctx.text(\"logout\"));\n}), rest.get(\"https://api.weatherapi.com/v1/current.json\", async (req, res, ctx) => {\n  const data = {\n    location: {\n      name: \"Test\",\n      region: \"Testing\",\n      country: \"United States of America\",\n      lat: 25.77,\n      lon: -80.19,\n      tz_id: \"America/Kentucky/Monticello\",\n      localtime_epoch: 1650921761,\n      localtime: \"2022-04-25 00:00\"\n    },\n    current: {\n      last_updated_epoch: 1650921300,\n      last_updated: \"2022-04-25 00:00\",\n      temp_c: 28.3,\n      temp_f: 82.9,\n      is_day: 1,\n      condition: {\n        text: \"Partly cloudy\",\n        icon: \"//cdn.weatherapi.com/weather/64x64/day/116.png\",\n        code: 1003\n      },\n      wind_mph: 13.6,\n      wind_kph: 22.0,\n      wind_degree: 100,\n      wind_dir: \"E\",\n      pressure_mb: 1019.0,\n      pressure_in: 30.09,\n      precip_mm: 0.0,\n      precip_in: 0.0,\n      humidity: 53,\n      cloud: 50,\n      feelslike_c: 30.4,\n      feelslike_f: 86.6,\n      vis_km: 16.0,\n      vis_miles: 9.0,\n      uv: 7.0,\n      gust_mph: 16.8,\n      gust_kph: 27.0\n    }\n  };\n  return res(ctx.json(data));\n}), rest.get(\"http://localhost:8080/api/songs\", (req, res, ctx) => {\n  return res(ctx.status(200), ctx.json([{\n    _id: \"5b21ca3eeb7f6fbccd47182b\",\n    title: \"House Of Cards\",\n    artist: \"Radiohead\",\n    album: \"In Rainbows\",\n    songLength: \"5:28\",\n    releaseYear: \"2007\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Money\",\n    artist: \"Pink Floyd\",\n    album: \"The Dark Side of the Moon\",\n    songLength: \"6:22\",\n    releaseYear: \"1973\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"What Difference Does It Make?\",\n    artist: \"The Smiths\",\n    album: \"Hatful of Hollow\",\n    songLength: \"3:51\",\n    releaseYear: \"1984\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Have a Cigar\",\n    artist: \"Pink Floyd\",\n    album: \"Wish You Were Here\",\n    songLength: \"5:07\",\n    releaseYear: \"1975\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd471822\",\n    title: \"Morning Bell\",\n    artist: \"Radiohead\",\n    album: \"Kid A\",\n    songLength: \"4:35\",\n    releaseYear: \"2000\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Wish You Were Here\",\n    artist: \"Pink Floyd\",\n    album: \"Wish You Were Here\",\n    songLength: \"5:41\",\n    releaseYear: \"1975\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Bigmouth Strikes Again\",\n    artist: \"The Smiths\",\n    album: \"The Queen Is Dead\",\n    songLength: \"3:12\",\n    releaseYear: \"1986\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd47182a\",\n    title: \"Weird Fishes/Arpeggi\",\n    artist: \"Radiohead\",\n    album: \"In Rainbows\",\n    songLength: \"5:18\",\n    releaseYear: \"2007\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Time\",\n    artist: \"Pink Floyd\",\n    album: \"The Dark Side of the Moon\",\n    songLength: \"6:52\",\n    releaseYear: \"1973\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"Heaven Knows I'm Miserable Now\",\n    artist: \"The Smiths\",\n    album: \"Hatful of Hollow\",\n    songLength: \"3:35\",\n    releaseYear: \"1984\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"Optimistic\",\n    artist: \"Radiohead\",\n    album: \"Kid A\",\n    songLength: \"5:15\",\n    releaseYear: \"2000\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"There Is a Light That Never Goes Out\",\n    artist: \"The Smiths\",\n    album: \"The Queen Is Dead\",\n    songLength: \"4:02\",\n    releaseYear: \"1986\"\n  }]));\n})]; // export const handlers = [\n//   rest.post(\"http://localhost:8080/api/save\", async (req, res, ctx) => {\n//     return res(\n//       ctx.delay(500),\n//       ctx.json({\n//         msg: \"Data has been saved!\",\n//       })\n//     );\n//   }),\n//   rest.post(\"http://localhost:8080/api/save\", (req, res, ctx) => {\n//     return res(\n//       ctx.status(500),\n//       ctx.json({\n//         msg: \"Sorry, an internal server error has occurred\",\n//       })\n//     );\n//   }),\n//   rest.post(\"http://localhost:8080/api/auth\", (req, res, ctx) => {\n//     return res(ctx.status(200), ctx.json({ mockToken: \"mockToken\" }));\n//   }),\n//   rest.post(\"http://localhost:8080/api/auth\", (req, res, ctx) => {\n//     return res(ctx.status(401));\n//   }),\n//   rest.post(\"http://localhost:8080/api/login\", (req, res, ctx) => {\n//     const mockToken = \"mockToken\";\n//     const user = {\n//       username: \"mockUsername\",\n//     };\n//     return res(\n//       ctx.cookie(\"mockToken\", mockToken, {\n//         expires: new Date(new Date().getTime() + 31557600000),\n//         origin: \"http://localhost:3000\",\n//         sameSite: \"strict\",\n//         secure: true,\n//         httpOnly: true,\n//       }),\n//       ctx.status(202),\n//       ctx.json({ user })\n//     );\n//   }),\n//   rest.post(\"http://localhost:8080/api/logout\", (req, res, ctx) => {\n//     return res(ctx.json(\"mockLogout Success\"));\n//   }),\n//   rest.post(\"http://localhost:8080/api/clear-cookies\", (req, res, ctx) => {\n//     return res(ctx.json(\"mockLogout Success\"));\n//   }),\n//   rest.get(\"http://localhost:8080/api/songs\", (req, res, ctx) => {\n//     return res(\n//       ctx.status(200),\n//       ctx.json([\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47182b\",\n//           title: \"House Of Cards\",\n//           artist: \"Radiohead\",\n//           album: \"In Rainbows\",\n//           songLength: \"5:28\",\n//           releaseYear: \"2007\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471816\",\n//           title: \"Money\",\n//           artist: \"Pink Floyd\",\n//           album: \"The Dark Side of the Moon\",\n//           songLength: \"6:22\",\n//           releaseYear: \"1973\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181e\",\n//           title: \"What Difference Does It Make?\",\n//           artist: \"The Smiths\",\n//           album: \"Hatful of Hollow\",\n//           songLength: \"3:51\",\n//           releaseYear: \"1984\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471817\",\n//           title: \"Have a Cigar\",\n//           artist: \"Pink Floyd\",\n//           album: \"Wish You Were Here\",\n//           songLength: \"5:07\",\n//           releaseYear: \"1975\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471822\",\n//           title: \"Morning Bell\",\n//           artist: \"Radiohead\",\n//           album: \"Kid A\",\n//           songLength: \"4:35\",\n//           releaseYear: \"2000\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471819\",\n//           title: \"Wish You Were Here\",\n//           artist: \"Pink Floyd\",\n//           album: \"Wish You Were Here\",\n//           songLength: \"5:41\",\n//           releaseYear: \"1975\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181a\",\n//           title: \"Bigmouth Strikes Again\",\n//           artist: \"The Smiths\",\n//           album: \"The Queen Is Dead\",\n//           songLength: \"3:12\",\n//           releaseYear: \"1986\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47182a\",\n//           title: \"Weird Fishes/Arpeggi\",\n//           artist: \"Radiohead\",\n//           album: \"In Rainbows\",\n//           songLength: \"5:18\",\n//           releaseYear: \"2007\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471815\",\n//           title: \"Time\",\n//           artist: \"Pink Floyd\",\n//           album: \"The Dark Side of the Moon\",\n//           songLength: \"6:52\",\n//           releaseYear: \"1973\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181f\",\n//           title: \"Heaven Knows I'm Miserable Now\",\n//           artist: \"The Smiths\",\n//           album: \"Hatful of Hollow\",\n//           songLength: \"3:35\",\n//           releaseYear: \"1984\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471821\",\n//           title: \"Optimistic\",\n//           artist: \"Radiohead\",\n//           album: \"Kid A\",\n//           songLength: \"5:15\",\n//           releaseYear: \"2000\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181b\",\n//           title: \"There Is a Light That Never Goes Out\",\n//           artist: \"The Smiths\",\n//           album: \"The Queen Is Dead\",\n//           songLength: \"4:02\",\n//           releaseYear: \"1986\",\n//         },\n//       ])\n//     );\n//   }),\n//   rest.get(\"http://localhost:8080/api/songs\", (req, res, ctx) => {\n//     return res(ctx.status(500), ctx.json({ msg: \"Error retrieving songs\" }));\n//   }),\n// ];","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/mocks/handlers.js"],"names":["rest","moment","handlers","post","req","res","ctx","cookie","expires","Date","getTime","origin","sameSite","secure","httpOnly","status","json","mockToken","delay","msg","user","body","console","log","username","password","activeUser","JSON","stringify","networkError","get","delete","subtract","toDate","undefined","text","data","location","name","region","country","lat","lon","tz_id","localtime_epoch","localtime","current","last_updated_epoch","last_updated","temp_c","temp_f","is_day","condition","icon","code","wind_mph","wind_kph","wind_degree","wind_dir","pressure_mb","pressure_in","precip_mm","precip_in","humidity","cloud","feelslike_c","feelslike_f","vis_km","vis_miles","uv","gust_mph","gust_kph","_id","title","artist","album","songLength","releaseYear"],"mappings":"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":["import { rest } from \"msw\";\nimport moment from \"moment\";\n\nexport const handlers = [\n  rest.post(\"http://localhost:8080/api/auth\", (req, res, ctx) => {\n    return res(\n      ctx.cookie(\"accessToken\", {\n        expires: new Date(new Date().getTime() + 1800 * 1000),\n        origin: \"http://localhost:3000\",\n        sameSite: \"strict\",\n        secure: true,\n        httpOnly: true,\n      }),\n      ctx.cookie(\"authedSession\", true, {\n        expires: new Date(new Date().getTime() + 1800 * 1000),\n        origin: \"http://localhost:3000\",\n        sameSite: \"strict\",\n        secure: true,\n      }),\n      ctx.status(200),\n      ctx.json({ mockToken: \"mockToken\" })\n    );\n  }),\n\n  rest.post(\"http://localhost:8080/api/save\", async (req, res, ctx) => {\n    return res(\n      ctx.delay(500),\n      ctx.json({\n        msg: \"Data has been saved!\",\n      })\n    );\n  }),\n\n  rest.post(\"http://localhost:8080/api/login\", async (req, res, ctx) => {\n    const user = req.body;\n    console.log(user);\n    const { username } = user;\n    const { password } = user;\n\n    const activeUser = JSON.stringify(user);\n\n    if (username === \"test1000\" && password === \"test1000test\") {\n      return res(\n        ctx.cookie(\"user\", activeUser, {\n          origin: \"http://localhost:3000\",\n          sameSite: \"strict\",\n          secure: true,\n        }),\n        ctx.cookie(\"accessToken\", {\n          expires: new Date(new Date().getTime() + 1800 * 1000),\n          origin: \"http://localhost:3000\",\n          sameSite: \"strict\",\n          secure: true,\n          httpOnly: true,\n        }),\n        ctx.cookie(\"refreshToken\", {\n          expires: new Date(new Date().getTime() + 31557600000),\n          origin: \"http://localhost:3000\",\n          sameSite: \"strict\",\n          secure: true,\n          httpOnly: true,\n        }),\n        ctx.cookie(\"authedSession\", true, {\n          expires: new Date(new Date().getTime() + 1800 * 1000),\n          origin: \"http://localhost:3000\",\n          sameSite: \"strict\",\n          secure: true,\n        }),\n        ctx.cookie(\"isAuthed\", true, {\n          expires: new Date(new Date().getTime() + 31557600000),\n          origin: \"http://localhost:3000\",\n          sameSite: \"strict\",\n          secure: true,\n        }),\n        ctx.status(202),\n        ctx.json({ user })\n      );\n    }\n\n    return res.networkError();\n  }),\n\n  rest.get(\"http://localhost:8080/api/logout\", async (req, res, ctx) => {\n    return res(ctx.json(\"Logout successful\"));\n  }),\n\n  rest.delete(\n    \"http://localhost:8080/api/clear-cookies\",\n    async (req, res, ctx) => {\n      const expires = new Date(moment().subtract(1, \"second\").toDate());\n      return res(\n        ctx.cookie(\"user\", undefined, { expires }),\n        ctx.cookie(\"accessToken\", undefined, { expires }),\n        ctx.cookie(\"refreshToken\", undefined, { expires }),\n        ctx.cookie(\"authedSession\", undefined, { expires }),\n        ctx.cookie(\"isAuthed\", undefined, { expires }),\n        ctx.text(\"logout\")\n      );\n    }\n  ),\n\n  rest.get(\n    \"https://api.weatherapi.com/v1/current.json\",\n    async (req, res, ctx) => {\n      const data = {\n        location: {\n          name: \"Test\",\n          region: \"Testing\",\n          country: \"United States of America\",\n          lat: 25.77,\n          lon: -80.19,\n          tz_id: \"America/Kentucky/Monticello\",\n          localtime_epoch: 1650921761,\n          localtime: \"2022-04-25 00:00\",\n        },\n        current: {\n          last_updated_epoch: 1650921300,\n          last_updated: \"2022-04-25 00:00\",\n          temp_c: 28.3,\n          temp_f: 82.9,\n          is_day: 1,\n          condition: {\n            text: \"Partly cloudy\",\n            icon: \"//cdn.weatherapi.com/weather/64x64/day/116.png\",\n            code: 1003,\n          },\n          wind_mph: 13.6,\n          wind_kph: 22.0,\n          wind_degree: 100,\n          wind_dir: \"E\",\n          pressure_mb: 1019.0,\n          pressure_in: 30.09,\n          precip_mm: 0.0,\n          precip_in: 0.0,\n          humidity: 53,\n          cloud: 50,\n          feelslike_c: 30.4,\n          feelslike_f: 86.6,\n          vis_km: 16.0,\n          vis_miles: 9.0,\n          uv: 7.0,\n          gust_mph: 16.8,\n          gust_kph: 27.0,\n        },\n      };\n\n      return res(ctx.json(data));\n    }\n  ),\n\n  rest.get(\"http://localhost:8080/api/songs\", (req, res, ctx) => {\n    return res(\n      ctx.status(200),\n      ctx.json([\n        {\n          _id: \"5b21ca3eeb7f6fbccd47182b\",\n          title: \"House Of Cards\",\n          artist: \"Radiohead\",\n          album: \"In Rainbows\",\n          songLength: \"5:28\",\n          releaseYear: \"2007\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd471816\",\n          title: \"Money\",\n          artist: \"Pink Floyd\",\n          album: \"The Dark Side of the Moon\",\n          songLength: \"6:22\",\n          releaseYear: \"1973\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd47181e\",\n          title: \"What Difference Does It Make?\",\n          artist: \"The Smiths\",\n          album: \"Hatful of Hollow\",\n          songLength: \"3:51\",\n          releaseYear: \"1984\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd471817\",\n          title: \"Have a Cigar\",\n          artist: \"Pink Floyd\",\n          album: \"Wish You Were Here\",\n          songLength: \"5:07\",\n          releaseYear: \"1975\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd471822\",\n          title: \"Morning Bell\",\n          artist: \"Radiohead\",\n          album: \"Kid A\",\n          songLength: \"4:35\",\n          releaseYear: \"2000\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd471819\",\n          title: \"Wish You Were Here\",\n          artist: \"Pink Floyd\",\n          album: \"Wish You Were Here\",\n          songLength: \"5:41\",\n          releaseYear: \"1975\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd47181a\",\n          title: \"Bigmouth Strikes Again\",\n          artist: \"The Smiths\",\n          album: \"The Queen Is Dead\",\n          songLength: \"3:12\",\n          releaseYear: \"1986\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd47182a\",\n          title: \"Weird Fishes/Arpeggi\",\n          artist: \"Radiohead\",\n          album: \"In Rainbows\",\n          songLength: \"5:18\",\n          releaseYear: \"2007\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd471815\",\n          title: \"Time\",\n          artist: \"Pink Floyd\",\n          album: \"The Dark Side of the Moon\",\n          songLength: \"6:52\",\n          releaseYear: \"1973\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd47181f\",\n          title: \"Heaven Knows I'm Miserable Now\",\n          artist: \"The Smiths\",\n          album: \"Hatful of Hollow\",\n          songLength: \"3:35\",\n          releaseYear: \"1984\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd471821\",\n          title: \"Optimistic\",\n          artist: \"Radiohead\",\n          album: \"Kid A\",\n          songLength: \"5:15\",\n          releaseYear: \"2000\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd47181b\",\n          title: \"There Is a Light That Never Goes Out\",\n          artist: \"The Smiths\",\n          album: \"The Queen Is Dead\",\n          songLength: \"4:02\",\n          releaseYear: \"1986\",\n        },\n      ])\n    );\n  }),\n];\n\n// export const handlers = [\n//   rest.post(\"http://localhost:8080/api/save\", async (req, res, ctx) => {\n//     return res(\n//       ctx.delay(500),\n//       ctx.json({\n//         msg: \"Data has been saved!\",\n//       })\n//     );\n//   }),\n//   rest.post(\"http://localhost:8080/api/save\", (req, res, ctx) => {\n//     return res(\n//       ctx.status(500),\n//       ctx.json({\n//         msg: \"Sorry, an internal server error has occurred\",\n//       })\n//     );\n//   }),\n//   rest.post(\"http://localhost:8080/api/auth\", (req, res, ctx) => {\n//     return res(ctx.status(200), ctx.json({ mockToken: \"mockToken\" }));\n//   }),\n//   rest.post(\"http://localhost:8080/api/auth\", (req, res, ctx) => {\n//     return res(ctx.status(401));\n//   }),\n//   rest.post(\"http://localhost:8080/api/login\", (req, res, ctx) => {\n//     const mockToken = \"mockToken\";\n//     const user = {\n//       username: \"mockUsername\",\n//     };\n//     return res(\n//       ctx.cookie(\"mockToken\", mockToken, {\n//         expires: new Date(new Date().getTime() + 31557600000),\n//         origin: \"http://localhost:3000\",\n//         sameSite: \"strict\",\n//         secure: true,\n//         httpOnly: true,\n//       }),\n//       ctx.status(202),\n//       ctx.json({ user })\n//     );\n//   }),\n//   rest.post(\"http://localhost:8080/api/logout\", (req, res, ctx) => {\n//     return res(ctx.json(\"mockLogout Success\"));\n//   }),\n//   rest.post(\"http://localhost:8080/api/clear-cookies\", (req, res, ctx) => {\n//     return res(ctx.json(\"mockLogout Success\"));\n//   }),\n//   rest.get(\"http://localhost:8080/api/songs\", (req, res, ctx) => {\n//     return res(\n//       ctx.status(200),\n//       ctx.json([\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47182b\",\n//           title: \"House Of Cards\",\n//           artist: \"Radiohead\",\n//           album: \"In Rainbows\",\n//           songLength: \"5:28\",\n//           releaseYear: \"2007\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471816\",\n//           title: \"Money\",\n//           artist: \"Pink Floyd\",\n//           album: \"The Dark Side of the Moon\",\n//           songLength: \"6:22\",\n//           releaseYear: \"1973\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181e\",\n//           title: \"What Difference Does It Make?\",\n//           artist: \"The Smiths\",\n//           album: \"Hatful of Hollow\",\n//           songLength: \"3:51\",\n//           releaseYear: \"1984\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471817\",\n//           title: \"Have a Cigar\",\n//           artist: \"Pink Floyd\",\n//           album: \"Wish You Were Here\",\n//           songLength: \"5:07\",\n//           releaseYear: \"1975\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471822\",\n//           title: \"Morning Bell\",\n//           artist: \"Radiohead\",\n//           album: \"Kid A\",\n//           songLength: \"4:35\",\n//           releaseYear: \"2000\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471819\",\n//           title: \"Wish You Were Here\",\n//           artist: \"Pink Floyd\",\n//           album: \"Wish You Were Here\",\n//           songLength: \"5:41\",\n//           releaseYear: \"1975\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181a\",\n//           title: \"Bigmouth Strikes Again\",\n//           artist: \"The Smiths\",\n//           album: \"The Queen Is Dead\",\n//           songLength: \"3:12\",\n//           releaseYear: \"1986\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47182a\",\n//           title: \"Weird Fishes/Arpeggi\",\n//           artist: \"Radiohead\",\n//           album: \"In Rainbows\",\n//           songLength: \"5:18\",\n//           releaseYear: \"2007\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471815\",\n//           title: \"Time\",\n//           artist: \"Pink Floyd\",\n//           album: \"The Dark Side of the Moon\",\n//           songLength: \"6:52\",\n//           releaseYear: \"1973\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181f\",\n//           title: \"Heaven Knows I'm Miserable Now\",\n//           artist: \"The Smiths\",\n//           album: \"Hatful of Hollow\",\n//           songLength: \"3:35\",\n//           releaseYear: \"1984\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471821\",\n//           title: \"Optimistic\",\n//           artist: \"Radiohead\",\n//           album: \"Kid A\",\n//           songLength: \"5:15\",\n//           releaseYear: \"2000\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181b\",\n//           title: \"There Is a Light That Never Goes Out\",\n//           artist: \"The Smiths\",\n//           album: \"The Queen Is Dead\",\n//           songLength: \"4:02\",\n//           releaseYear: \"1986\",\n//         },\n//       ])\n//     );\n//   }),\n//   rest.get(\"http://localhost:8080/api/songs\", (req, res, ctx) => {\n//     return res(ctx.status(500), ctx.json({ msg: \"Error retrieving songs\" }));\n//   }),\n// ];\n"]},"metadata":{},"sourceType":"module"}