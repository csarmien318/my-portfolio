{"ast":null,"code":"import _asyncToGenerator from\"/Users/chritsophersarmiento/git/my-portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectDestructuringEmpty from\"/Users/chritsophersarmiento/git/my-portfolio/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\";import _slicedToArray from\"/Users/chritsophersarmiento/git/my-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/chritsophersarmiento/git/my-portfolio/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from\"react\";import{Col,Container,Row,Placeholder}from\"react-bootstrap\";import axios from\"axios\";import Page from\"../components/Page\";import SongsListGroup from\"../components/SongsListGroup\";import SongsTable from\"../components/SongsTable\";import useAuth from\"../hooks/useAuth\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Songs=function Songs(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),getApiSongs=_useState2[0],setApiSongs=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),allSongs=_useState4[0],setAllSongs=_useState4[1];var _useState5=useState(\"All Artists\"),_useState6=_slicedToArray(_useState5,2),selectedArtist=_useState6[0],setSelectedArtist=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),pageNumber=_useState8[0],setPageNumber=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),loader=_useState10[0],setLoader=_useState10[1];var _useState11=useState({path:\"\",order:\"ascending\"}),_useState12=_slicedToArray(_useState11,2),sortColumn=_useState12[0],setSortColumn=_useState12[1];var _useAuth=useAuth();_objectDestructuringEmpty(_useAuth);useEffect(function(){function getSongsData(){return _getSongsData.apply(this,arguments);}function _getSongsData(){_getSongsData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoader(true);_context.next=3;return axios.get(\"http://localhost:8080/api/songs\",{withCredentials:true}).then(function(response){var data=response.data;setAllSongs(data);setApiSongs(data);setLoader(false);}).catch(function(err){console.log(err.message);});case 3:case\"end\":return _context.stop();}}},_callee);}));return _getSongsData.apply(this,arguments);}getSongsData();},[]);useEffect(function(){setAllSongs(getApiSongs);setPageNumber(0);setSortColumn({path:\"\",order:\"ascending\"});},[selectedArtist]);return/*#__PURE__*/_jsx(Page,{title:\"Tabled Data\",children:/*#__PURE__*/_jsx(Container,{fluid:true,style:{maxWidth:\"2000px\"},children:/*#__PURE__*/_jsxs(Row,{children:[loader&&/*#__PURE__*/_jsx(Placeholder,{\"data-testid\":\"loaderImg\",as:\"p\",animation:\"glow\",children:/*#__PURE__*/_jsx(Placeholder,{xs:12,bg:\"dark\",size:\"lg\"})}),!loader&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Col,{xs:3,md:2,children:/*#__PURE__*/_jsx(SongsListGroup,{\"data-testid\":\"songsListGroup\",onArtistSelect:setSelectedArtist,selectedArtist:selectedArtist})}),/*#__PURE__*/_jsx(Col,{xs:9,md:10,children:/*#__PURE__*/_jsx(SongsTable,{\"data-testid\":\"songsTable\",allSongs:allSongs,setAllSongs:setAllSongs,selectedArtist:selectedArtist,pageNumber:pageNumber,setPageNumber:setPageNumber,sortColumn:sortColumn,setSortColumn:setSortColumn})})]})]})})});};export default Songs;","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/pages/Songs.jsx"],"names":["React","useState","useEffect","Col","Container","Row","Placeholder","axios","Page","SongsListGroup","SongsTable","useAuth","Songs","getApiSongs","setApiSongs","allSongs","setAllSongs","selectedArtist","setSelectedArtist","pageNumber","setPageNumber","loader","setLoader","path","order","sortColumn","setSortColumn","getSongsData","get","withCredentials","then","response","data","catch","err","console","log","message","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Col, Container, Row, Placeholder } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Page from \"../components/Page\";\nimport SongsListGroup from \"../components/SongsListGroup\";\nimport SongsTable from \"../components/SongsTable\";\nimport useAuth from \"../hooks/useAuth\";\n\nconst Songs = () => {\n  const [getApiSongs, setApiSongs] = useState([]);\n  const [allSongs, setAllSongs] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(\"All Artists\");\n  const [pageNumber, setPageNumber] = useState(0);\n  const [loader, setLoader] = useState(false);\n  const [sortColumn, setSortColumn] = useState({\n    path: \"\",\n    order: \"ascending\",\n  });\n\n  const {} = useAuth();\n\n  useEffect(() => {\n    async function getSongsData() {\n      setLoader(true);\n      await axios\n        .get(\"http://localhost:8080/api/songs\", {\n          withCredentials: true,\n        })\n        .then((response) => {\n          const { data } = response;\n          setAllSongs(data);\n          setApiSongs(data);\n          setLoader(false);\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n    }\n    getSongsData();\n  }, []);\n\n  useEffect(() => {\n    setAllSongs(getApiSongs);\n    setPageNumber(0);\n    setSortColumn({ path: \"\", order: \"ascending\" });\n  }, [selectedArtist]);\n\n  return (\n    <Page title=\"Tabled Data\">\n      <Container fluid style={{ maxWidth: \"2000px\" }}>\n        <Row>\n          {loader && (\n            <Placeholder data-testid=\"loaderImg\" as=\"p\" animation=\"glow\">\n              <Placeholder xs={12} bg=\"dark\" size=\"lg\" />\n            </Placeholder>\n          )}\n          {!loader && (\n            <>\n              <Col xs={3} md={2}>\n                <SongsListGroup\n                  data-testid=\"songsListGroup\"\n                  onArtistSelect={setSelectedArtist}\n                  selectedArtist={selectedArtist}\n                />\n              </Col>\n              <Col xs={9} md={10}>\n                <SongsTable\n                  data-testid=\"songsTable\"\n                  allSongs={allSongs}\n                  setAllSongs={setAllSongs}\n                  selectedArtist={selectedArtist}\n                  pageNumber={pageNumber}\n                  setPageNumber={setPageNumber}\n                  sortColumn={sortColumn}\n                  setSortColumn={setSortColumn}\n                />\n              </Col>\n            </>\n          )}\n        </Row>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Songs;\n"]},"metadata":{},"sourceType":"module"}