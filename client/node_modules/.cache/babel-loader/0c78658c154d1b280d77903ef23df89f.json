{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies(); // const authedSession = cookies.get(\"authedSession\");\n// const authedToken = cookies.get(\"authedToken\");\n\nconst useAuth = () => {\n  _s();\n\n  const [isUser, setIsUser] = useState(false || localStorage.getItem(\"user\"));\n  const [user, setUser] = useState(() => {\n    if (!isUser) return \"\";\n    return localStorage.getItem(\"user\");\n  });\n  useEffect(() => {\n    const checkUser = localStorage.getItem(\"user\");\n\n    if (checkUser) {\n      console.log(\"checkUser: \", checkUser);\n      const currentUser = JSON.parse(checkUser);\n      setUser(currentUser);\n      setIsUser(true);\n    } else {\n      setUser();\n      setIsUser(false);\n    }\n  }, []);\n\n  const handleLogin = async (username, password, setErrorMsg) => {\n    try {\n      const response = await axios.post(\"/api/login\", JSON.stringify({\n        username,\n        password\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      window.location.reload();\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      setUser(response.data.user);\n      setIsUser(true);\n    } catch (err) {\n      var _err$response, _err$response2;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        alert(\"No Server Response\");\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        alert(\"Missing Username or Password\");\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        alert(\"Incorrect username or password\");\n        console.log(\"Incorrect username or password\");\n      } else {\n        alert(\"Login Failed\");\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    axios.delete(\"/api/clear-cookies\");\n    axios.get(\"/api/logout\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => {\n      localStorage.clear();\n      console.log(\"Logged out successfully.\");\n    }).catch(() => {\n      console.log(\"An internal server error has occurred.\");\n    });\n    localStorage.clear();\n    setUser(false);\n  };\n\n  return {\n    user,\n    isUser,\n    setUser,\n    setIsUser,\n    handleLogin,\n    handleLogout\n  };\n};\n\n_s(useAuth, \"iAA4K2YDW8K6ifi34aaRPS1ZI8w=\");\n\nexport default useAuth; // TODO: Make a function validateInput that checks\n// const validateInput = (username, password) => {\n//   if (!(username has a number && lowercase letters)) {\n//     return false;\n//   }\n//   if (!(password has numbers && has uppercase letters && lowercase letters)) {\n//     return false;\n//   }\n//\n//   return true;\n// }","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/hooks/useAuth.js"],"names":["useState","useEffect","axios","Cookies","cookies","useAuth","isUser","setIsUser","localStorage","getItem","user","setUser","checkUser","console","log","currentUser","JSON","parse","handleLogin","username","password","setErrorMsg","response","post","stringify","headers","window","location","reload","setItem","data","err","alert","status","handleLogout","delete","get","then","clear","catch"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n\n// const authedSession = cookies.get(\"authedSession\");\n// const authedToken = cookies.get(\"authedToken\");\n\nconst useAuth = () => {\n  const [isUser, setIsUser] = useState(false || localStorage.getItem(\"user\"));\n  const [user, setUser] = useState(() => {\n    if (!isUser) return \"\";\n    return localStorage.getItem(\"user\");\n  });\n\n  useEffect(() => {\n    const checkUser = localStorage.getItem(\"user\");\n    if (checkUser) {\n      console.log(\"checkUser: \", checkUser);\n      const currentUser = JSON.parse(checkUser);\n      setUser(currentUser);\n      setIsUser(true);\n    } else {\n      setUser();\n      setIsUser(false);\n    }\n  }, []);\n\n  const handleLogin = async (username, password, setErrorMsg) => {\n    try {\n      const response = await axios.post(\n        \"/api/login\",\n        JSON.stringify({ username, password }),\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n\n      window.location.reload();\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n\n      setUser(response.data.user);\n      setIsUser(true);\n    } catch (err) {\n      if (!err?.response) {\n        alert(\"No Server Response\");\n      } else if (err.response?.status === 400) {\n        alert(\"Missing Username or Password\");\n      } else if (err.response?.status === 401) {\n        alert(\"Incorrect username or password\");\n        console.log(\"Incorrect username or password\");\n      } else {\n        alert(\"Login Failed\");\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    axios.delete(\"/api/clear-cookies\");\n    axios\n      .get(\"/api/logout\", {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then(() => {\n        localStorage.clear();\n        console.log(\"Logged out successfully.\");\n      })\n      .catch(() => {\n        console.log(\"An internal server error has occurred.\");\n      });\n\n    localStorage.clear();\n    setUser(false);\n  };\n\n  return {\n    user,\n    isUser,\n    setUser,\n    setIsUser,\n    handleLogin,\n    handleLogout,\n  };\n};\n\nexport default useAuth;\n\n// TODO: Make a function validateInput that checks\n// const validateInput = (username, password) => {\n//   if (!(username has a number && lowercase letters)) {\n//     return false;\n//   }\n//   if (!(password has numbers && has uppercase letters && lowercase letters)) {\n//     return false;\n//   }\n//\n//   return true;\n// }\n"]},"metadata":{},"sourceType":"module"}