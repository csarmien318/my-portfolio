{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bufferFrom = void 0;\n/**\n * Convert a given string into a `Uint8Array`.\n * We don't use `TextEncoder` because it's unavailable in some environments.\n */\n\nfunction bufferFrom(init) {\n  var encodedString = encodeURIComponent(init);\n  var binaryString = encodedString.replace(/%([0-9A-F]{2})/g, function (_, char) {\n    return String.fromCharCode('0x' + char);\n  });\n  var buffer = new Uint8Array(binaryString.length);\n  Array.prototype.forEach.call(binaryString, function (char, index) {\n    buffer[index] = char.charCodeAt(0);\n  });\n  return buffer;\n}\n\nexports.bufferFrom = bufferFrom;","map":{"version":3,"sources":["../../../../src/interceptors/XMLHttpRequest/utils/bufferFrom.ts"],"names":[],"mappings":";;;;;;AAAA;;;AAGG;;AACH,SAAgB,UAAhB,CAA2B,IAA3B,EAAuC;AACrC,MAAM,aAAa,GAAG,kBAAkB,CAAC,IAAD,CAAxC;AACA,MAAM,YAAY,GAAG,aAAa,CAAC,OAAd,CAAsB,iBAAtB,EAAyC,UAAC,CAAD,EAAI,IAAJ,EAAQ;AACpE,WAAO,MAAM,CAAC,YAAP,CAAqB,OAAO,IAA5B,CAAP;AACD,GAFoB,CAArB;AAGA,MAAM,MAAM,GAAG,IAAI,UAAJ,CAAe,YAAY,CAAC,MAA5B,CAAf;AACA,EAAA,KAAK,CAAC,SAAN,CAAgB,OAAhB,CAAwB,IAAxB,CAA6B,YAA7B,EAA2C,UAAC,IAAD,EAAO,KAAP,EAAY;AACrD,IAAA,MAAM,CAAC,KAAD,CAAN,GAAgB,IAAI,CAAC,UAAL,CAAgB,CAAhB,CAAhB;AACD,GAFD;AAIA,SAAO,MAAP;AACD;;AAXD,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferFrom = void 0;\n/**\n * Convert a given string into a `Uint8Array`.\n * We don't use `TextEncoder` because it's unavailable in some environments.\n */\nfunction bufferFrom(init) {\n    var encodedString = encodeURIComponent(init);\n    var binaryString = encodedString.replace(/%([0-9A-F]{2})/g, function (_, char) {\n        return String.fromCharCode(('0x' + char));\n    });\n    var buffer = new Uint8Array(binaryString.length);\n    Array.prototype.forEach.call(binaryString, function (char, index) {\n        buffer[index] = char.charCodeAt(0);\n    });\n    return buffer;\n}\nexports.bufferFrom = bufferFrom;\n//# sourceMappingURL=bufferFrom.js.map"]},"metadata":{},"sourceType":"script"}