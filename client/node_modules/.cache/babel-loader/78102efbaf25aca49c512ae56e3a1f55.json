{"ast":null,"code":"var _jsxFileName = \"/Users/chritsophersarmiento/git/my-portfolio/src/pages/Songs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Page from \"../components/Page\";\nimport SongsListGroup from \"../components/SongsListGroup\";\nimport SongsTable from \"../components/SongsTable\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport useAuth from \"../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Songs = () => {\n  _s();\n\n  const [getApiSongs, setApiSongs] = useState([]);\n  const [allSongs, setAllSongs] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(\"All Artists\");\n  const [pageNumber, setPageNumber] = useState(0);\n  const [sortColumn, setSortColumn] = useState({\n    path: \"\",\n    order: \"ascending\"\n  });\n  const {\n    handleLogout\n  } = useAuth();\n  useEffect(() => {\n    function getSongsData() {\n      return axios.get(\"http://localhost:8080/api/songs\", {\n        withCredentials: true\n      }).then(response => {\n        const {\n          data\n        } = response;\n        setAllSongs(data);\n        setApiSongs(data);\n        return data;\n      }).catch(err => {\n        const {\n          status\n        } = err === null || err === void 0 ? void 0 : err.response;\n        console.log(err);\n\n        if (status === 401 || status === 403) {\n          alert(\"Unauthorized\"); // window.location.reload();\n        }\n\n        if (status === 400) {\n          alert(\"Unauthorized\"); // window.location.reload();\n\n          handleLogout();\n        } else {\n          // window.location.reload();\n          alert(\"An internal server error occurred.\");\n          handleLogout();\n        } // return status;\n\n      });\n    }\n\n    getSongsData();\n  }, []);\n  useEffect(() => {\n    setAllSongs(getApiSongs);\n    setPageNumber(0);\n    setSortColumn({\n      path: \"\",\n      order: \"ascending\"\n    });\n  }, [selectedArtist]); // const getSongsData = async () => {\n  //   await axios\n  //     .get(\"http://localhost:8080/api/songs\")\n  //     .then((response) => {\n  //       const songsData = response.data;\n  //       setAllSongs(songsData);\n  //       setApiSongs(songsData);\n  //     })\n  //     .catch((err) => {\n  //       const { status } = err.response;\n  //       console.log(err);\n  //       if (status === 401 || status === 403) {\n  //         window.location.reload();\n  //       }\n  //       if (status === 400) {\n  //         alert(\"Unauthorized\");\n  //         window.location.reload();\n  //         handleLogout();\n  //       } else {\n  //         window.location.reload();\n  //         alert(\"An internal server error occurred.\");\n  //         handleLogout();\n  //       }\n  //     });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Tabled Data\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      style: {\n        maxWidth: \"2000px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 3,\n          md: 2,\n          children: /*#__PURE__*/_jsxDEV(SongsListGroup, {\n            onArtistSelect: setSelectedArtist,\n            selectedArtist: selectedArtist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 9,\n          md: 10,\n          children: /*#__PURE__*/_jsxDEV(SongsTable, {\n            allSongs: allSongs,\n            setAllSongs: setAllSongs,\n            selectedArtist: selectedArtist,\n            pageNumber: pageNumber,\n            setPageNumber: setPageNumber,\n            sortColumn: sortColumn,\n            setSortColumn: setSortColumn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Songs, \"wL+pGmY5bD19Lr12x3424cEWvFc=\", false, function () {\n  return [useAuth];\n});\n\n_c = Songs;\nexport default Songs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/pages/Songs.jsx"],"names":["React","useState","useEffect","axios","Page","SongsListGroup","SongsTable","Col","Container","Row","useAuth","Songs","getApiSongs","setApiSongs","allSongs","setAllSongs","selectedArtist","setSelectedArtist","pageNumber","setPageNumber","sortColumn","setSortColumn","path","order","handleLogout","getSongsData","get","withCredentials","then","response","data","catch","err","status","console","log","alert","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Page from \"../components/Page\";\nimport SongsListGroup from \"../components/SongsListGroup\";\nimport SongsTable from \"../components/SongsTable\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport useAuth from \"../hooks/useAuth\";\n\nconst Songs = () => {\n  const [getApiSongs, setApiSongs] = useState([]);\n  const [allSongs, setAllSongs] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(\"All Artists\");\n  const [pageNumber, setPageNumber] = useState(0);\n  const [sortColumn, setSortColumn] = useState({\n    path: \"\",\n    order: \"ascending\",\n  });\n\n  const { handleLogout } = useAuth();\n\n  useEffect(() => {\n    function getSongsData() {\n      return axios\n        .get(\"http://localhost:8080/api/songs\", {\n          withCredentials: true,\n        })\n        .then((response) => {\n          const { data } = response;\n          setAllSongs(data);\n          setApiSongs(data);\n          return data;\n        })\n        .catch((err) => {\n          const { status } = err?.response;\n          console.log(err);\n          if (status === 401 || status === 403) {\n            alert(\"Unauthorized\");\n            // window.location.reload();\n          }\n          if (status === 400) {\n            alert(\"Unauthorized\");\n            // window.location.reload();\n            handleLogout();\n          } else {\n            // window.location.reload();\n            alert(\"An internal server error occurred.\");\n            handleLogout();\n          }\n          // return status;\n        });\n    }\n    getSongsData();\n  }, []);\n\n  useEffect(() => {\n    setAllSongs(getApiSongs);\n    setPageNumber(0);\n    setSortColumn({ path: \"\", order: \"ascending\" });\n  }, [selectedArtist]);\n\n  // const getSongsData = async () => {\n  //   await axios\n  //     .get(\"http://localhost:8080/api/songs\")\n  //     .then((response) => {\n  //       const songsData = response.data;\n  //       setAllSongs(songsData);\n  //       setApiSongs(songsData);\n  //     })\n  //     .catch((err) => {\n  //       const { status } = err.response;\n  //       console.log(err);\n  //       if (status === 401 || status === 403) {\n  //         window.location.reload();\n  //       }\n  //       if (status === 400) {\n  //         alert(\"Unauthorized\");\n  //         window.location.reload();\n  //         handleLogout();\n  //       } else {\n  //         window.location.reload();\n  //         alert(\"An internal server error occurred.\");\n  //         handleLogout();\n  //       }\n  //     });\n  // };\n\n  return (\n    <Page title=\"Tabled Data\">\n      <Container fluid style={{ maxWidth: \"2000px\" }}>\n        <Row>\n          <Col xs={3} md={2}>\n            <SongsListGroup\n              onArtistSelect={setSelectedArtist}\n              selectedArtist={selectedArtist}\n            />\n          </Col>\n          <Col xs={9} md={10}>\n            <SongsTable\n              allSongs={allSongs}\n              setAllSongs={setAllSongs}\n              selectedArtist={selectedArtist}\n              pageNumber={pageNumber}\n              setPageNumber={setPageNumber}\n              sortColumn={sortColumn}\n              setSortColumn={setSortColumn}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Songs;\n"]},"metadata":{},"sourceType":"module"}