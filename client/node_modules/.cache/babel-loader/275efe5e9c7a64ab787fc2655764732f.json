{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\nconst authedSession = cookies.get(\"authedSession\");\nconst authedToken = cookies.get(\"authedToken\");\n\nconst useAuth = () => {\n  _s();\n\n  const [isUser, setIsUser] = useState(authedSession);\n  const [user, setUser] = useState(() => {\n    if (!isUser) return \"\";\n    return localStorage.getItem(\"user\");\n  });\n  useEffect(() => {\n    if (authedToken && authedSession) {\n      const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n      setUser(currentUser);\n      setIsUser(authedSession);\n    } else if (authedToken && !authedSession) {\n      console.log(\"refreshing of tokens needed!\");\n      const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n      setUser(currentUser);\n      setIsUser(authedSession);\n    } else {\n      setUser();\n      setIsUser(false);\n    }\n  }, []);\n\n  const handleLogout = async () => {\n    await axios.delete(\"/api/logout\", user, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => {\n      localStorage.clear();\n      console.log(\"Logged out successfully.\");\n    }).catch(() => {\n      console.log(\"An internal server error has occurred.\");\n    });\n    localStorage.clear();\n    setUser(\"\");\n    setIsUser(false);\n    window.location.reload();\n  };\n\n  return {\n    user,\n    isUser,\n    setUser,\n    setIsUser,\n    handleLogout\n  };\n};\n\n_s(useAuth, \"de0lhUgR+kUI0OMxVcPRjGZSBMY=\");\n\nexport default useAuth;","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/hooks/useAuth.js"],"names":["useState","useEffect","axios","Cookies","cookies","authedSession","get","authedToken","useAuth","isUser","setIsUser","user","setUser","localStorage","getItem","currentUser","JSON","parse","console","log","handleLogout","delete","headers","then","clear","catch","window","location","reload"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AAEA,MAAME,aAAa,GAAGD,OAAO,CAACE,GAAR,CAAY,eAAZ,CAAtB;AACA,MAAMC,WAAW,GAAGH,OAAO,CAACE,GAAR,CAAY,aAAZ,CAApB;;AAEA,MAAME,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAACK,aAAD,CAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,MAAM;AACrC,QAAI,CAACS,MAAL,EAAa,OAAO,EAAP;AACb,WAAOI,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAP;AACD,GAH+B,CAAhC;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,WAAW,IAAIF,aAAnB,EAAkC;AAChC,YAAMU,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAApB;AACAF,MAAAA,OAAO,CAACG,WAAD,CAAP;AACAL,MAAAA,SAAS,CAACL,aAAD,CAAT;AACD,KAJD,MAIO,IAAIE,WAAW,IAAI,CAACF,aAApB,EAAmC;AACxCa,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,YAAMJ,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAApB;AACAF,MAAAA,OAAO,CAACG,WAAD,CAAP;AACAL,MAAAA,SAAS,CAACL,aAAD,CAAT;AACD,KALM,MAKA;AACLO,MAAAA,OAAO;AACPF,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMU,YAAY,GAAG,YAAY;AAC/B,UAAMlB,KAAK,CACRmB,MADG,CACI,aADJ,EACmBV,IADnB,EACyB;AAC3BW,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AADkB,KADzB,EAIHC,IAJG,CAIE,MAAM;AACVV,MAAAA,YAAY,CAACW,KAAb;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,KAPG,EAQHM,KARG,CAQG,MAAM;AACXP,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACD,KAVG,CAAN;AAYAN,IAAAA,YAAY,CAACW,KAAb;AACAZ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAgB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAjBD;;AAmBA,SAAO;AACLjB,IAAAA,IADK;AAELF,IAAAA,MAFK;AAGLG,IAAAA,OAHK;AAILF,IAAAA,SAJK;AAKLU,IAAAA;AALK,GAAP;AAOD,CAjDD;;GAAMZ,O;;AAmDN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n\nconst authedSession = cookies.get(\"authedSession\");\nconst authedToken = cookies.get(\"authedToken\");\n\nconst useAuth = () => {\n  const [isUser, setIsUser] = useState(authedSession);\n  const [user, setUser] = useState(() => {\n    if (!isUser) return \"\";\n    return localStorage.getItem(\"user\");\n  });\n\n  useEffect(() => {\n    if (authedToken && authedSession) {\n      const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n      setUser(currentUser);\n      setIsUser(authedSession);\n    } else if (authedToken && !authedSession) {\n      console.log(\"refreshing of tokens needed!\");\n      const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n      setUser(currentUser);\n      setIsUser(authedSession);\n    } else {\n      setUser();\n      setIsUser(false);\n    }\n  }, []);\n\n  const handleLogout = async () => {\n    await axios\n      .delete(\"/api/logout\", user, {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then(() => {\n        localStorage.clear();\n        console.log(\"Logged out successfully.\");\n      })\n      .catch(() => {\n        console.log(\"An internal server error has occurred.\");\n      });\n\n    localStorage.clear();\n    setUser(\"\");\n    setIsUser(false);\n    window.location.reload();\n  };\n\n  return {\n    user,\n    isUser,\n    setUser,\n    setIsUser,\n    handleLogout,\n  };\n};\n\nexport default useAuth;\n"]},"metadata":{},"sourceType":"module"}