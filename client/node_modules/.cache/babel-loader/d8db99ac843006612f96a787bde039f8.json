{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\nconst isAuthed = cookies.get(\"isAuthed\");\nconst activeUser = cookies.get(\"user\");\naxios.defaults.withCredentials = true;\n\nconst useAuth = () => {\n  _s();\n\n  const [isUser, setUser] = useState(() => {\n    if (activeUser || isAuthed) return true;\n    return false;\n  });\n  const checkUser = localStorage.getItem(\"user\");\n  useEffect(() => {\n    let mounted = true;\n\n    async function getData() {\n      await axios.post(\"http://localhost:8080/api/auth\").catch(err => {\n        var _err$response;\n\n        if ((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 500) alert(\"Internal server error\");\n\n        if (mounted && (checkUser || activeUser)) {\n          handleLogout();\n          window.location.reload();\n          mounted = false;\n          alert(\"Unauthorized\");\n        }\n      });\n    }\n\n    getData();\n  }, []);\n\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/login\", JSON.stringify({\n        username,\n        password\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true\n      });\n      let name = JSON.stringify(response.data.user);\n      localStorage.setItem(\"user\", name);\n      setUser(true);\n      window.location.reload();\n    } catch (err) {\n      var _err$response2, _err$response3;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        alert(\"An unexpected error occurred. Please try again later.\");\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 400) {\n        alert(\"Missing Username or Password\");\n      } else if (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 401) {\n        alert(\"Incorrect username or password\");\n        console.log(\"Incorrect username or password\");\n      } else {\n        alert(\"Login Failed\");\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    axios.delete(\"http://localhost:8080/api/clear-cookies\");\n    axios.get(\"http://localhost:8080/api/logout\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      withCredential: true\n    }) // .then(() => {\n    //   localStorage.clear();\n    // })\n    .catch(() => {\n      console.log(\"An internal server error has occurred.\");\n    });\n    setUser(false);\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  return {\n    isUser,\n    activeUser,\n    checkUser,\n    setUser,\n    handleLogin,\n    handleLogout\n  };\n};\n\n_s(useAuth, \"CyMi+L1G/555e7ByPKITQ9R6FGQ=\");\n\nexport default useAuth;","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/hooks/useAuth.js"],"names":["useState","useEffect","axios","Cookies","cookies","isAuthed","get","activeUser","defaults","withCredentials","useAuth","isUser","setUser","checkUser","localStorage","getItem","mounted","getData","post","catch","err","response","status","alert","handleLogout","window","location","reload","handleLogin","username","password","JSON","stringify","headers","name","data","user","setItem","console","log","delete","withCredential","clear"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\nconst isAuthed = cookies.get(\"isAuthed\");\nconst activeUser = cookies.get(\"user\");\n\naxios.defaults.withCredentials = true;\n\nconst useAuth = () => {\n  const [isUser, setUser] = useState(() => {\n    if (activeUser || isAuthed) return true;\n    return false;\n  });\n\n  const checkUser = localStorage.getItem(\"user\");\n  useEffect(() => {\n    let mounted = true;\n    async function getData() {\n      await axios.post(\"http://localhost:8080/api/auth\").catch((err) => {\n        if (err?.response?.status === 500) alert(\"Internal server error\");\n        if (mounted && (checkUser || activeUser)) {\n          handleLogout();\n          window.location.reload();\n          mounted = false;\n          alert(\"Unauthorized\");\n        }\n      });\n    }\n    getData();\n  }, []);\n\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await axios.post(\n        \"http://localhost:8080/api/login\",\n        JSON.stringify({ username, password }),\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          withCredentials: true,\n        }\n      );\n      let name = JSON.stringify(response.data.user);\n      localStorage.setItem(\"user\", name);\n      setUser(true);\n      window.location.reload();\n    } catch (err) {\n      if (!err?.response) {\n        alert(\"An unexpected error occurred. Please try again later.\");\n      } else if (err.response?.status === 400) {\n        alert(\"Missing Username or Password\");\n      } else if (err.response?.status === 401) {\n        alert(\"Incorrect username or password\");\n        console.log(\"Incorrect username or password\");\n      } else {\n        alert(\"Login Failed\");\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    axios.delete(\"http://localhost:8080/api/clear-cookies\");\n    axios\n      .get(\"http://localhost:8080/api/logout\", {\n        headers: { \"Content-Type\": \"application/json\" },\n        withCredential: true,\n      })\n      // .then(() => {\n      //   localStorage.clear();\n      // })\n      .catch(() => {\n        console.log(\"An internal server error has occurred.\");\n      });\n\n    setUser(false);\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  return {\n    isUser,\n    activeUser,\n    checkUser,\n    setUser,\n    handleLogin,\n    handleLogout,\n  };\n};\n\nexport default useAuth;\n"]},"metadata":{},"sourceType":"module"}