{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { omit } from \"lodash\";\n\nconst useLogin = callback => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    console.log(\"COMING FROM useLogin\");\n    setSubmitted(false);\n  }, [username, password]);\n\n  const validate = (name, value) => {\n    switch (name) {\n      case \"username\":\n        if (!new RegExp(/^[A-Za-z-0-9]+$/).test(value)) {\n          setErrors(\"Incorrect username or password\");\n        } else setErrors(\"\");\n\n        break;\n\n      case \"password\":\n        if (!new RegExp(/^[A-Za-z-0-9]+$/).test(value) && value.length !== 12) {\n          setErrors(\"Incorrect username or password\");\n        } else setErrors(\"\");\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleChange = e => {\n    e.persist();\n    let name = e.target.name;\n    let val = e.target.value;\n    validate(name, val);\n    if (name === \"username\") setUsername(val);\n    if (name === \"password\") setPassword(val);\n  };\n\n  const handleSubmit = e => {\n    if (e) e.preventDefault();\n\n    if (errors.length === 0) {\n      setSubmitted(true);\n      callback();\n    } else {\n      alert(\"Form was not submitted. Make sure required fields were filled correctly.\");\n    }\n  };\n\n  return {\n    username,\n    password,\n    errors,\n    submitted,\n    handleChange,\n    handleSubmit\n  };\n};\n\n_s(useLogin, \"kzuvI6Pk8Y+Wfbwx/m71HXbeczc=\");\n\nexport default useLogin;","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/hooks/useLogin.js"],"names":["useState","useEffect","omit","useLogin","callback","username","setUsername","password","setPassword","errors","setErrors","submitted","setSubmitted","console","log","validate","name","value","RegExp","test","length","handleChange","e","persist","target","val","handleSubmit","preventDefault","alert"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,QAArB;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHQ,EAGN,CAACP,QAAD,EAAWE,QAAX,CAHM,CAAT;;AAKA,QAAMQ,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,YAAQD,IAAR;AACE,WAAK,UAAL;AACE,YAAI,CAAC,IAAIE,MAAJ,CAAW,iBAAX,EAA8BC,IAA9B,CAAmCF,KAAnC,CAAL,EAAgD;AAC9CP,UAAAA,SAAS,CAAC,gCAAD,CAAT;AACD,SAFD,MAEOA,SAAS,CAAC,EAAD,CAAT;;AACP;;AAEF,WAAK,UAAL;AACE,YAAI,CAAC,IAAIQ,MAAJ,CAAW,iBAAX,EAA8BC,IAA9B,CAAmCF,KAAnC,CAAD,IAA8CA,KAAK,CAACG,MAAN,KAAiB,EAAnE,EAAuE;AACrEV,UAAAA,SAAS,CAAC,gCAAD,CAAT;AACD,SAFD,MAEOA,SAAS,CAAC,EAAD,CAAT;;AACP;;AACF;AACE;AAbJ;AAeD,GAhBD;;AAkBA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,OAAF;AAEA,QAAIP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASR,IAApB;AACA,QAAIS,GAAG,GAAGH,CAAC,CAACE,MAAF,CAASP,KAAnB;AAEAF,IAAAA,QAAQ,CAACC,IAAD,EAAOS,GAAP,CAAR;AAEA,QAAIT,IAAI,KAAK,UAAb,EAAyBV,WAAW,CAACmB,GAAD,CAAX;AACzB,QAAIT,IAAI,KAAK,UAAb,EAAyBR,WAAW,CAACiB,GAAD,CAAX;AAC1B,GAVD;;AAYA,QAAMC,YAAY,GAAIJ,CAAD,IAAO;AAC1B,QAAIA,CAAJ,EAAOA,CAAC,CAACK,cAAF;;AACP,QAAIlB,MAAM,CAACW,MAAP,KAAkB,CAAtB,EAAyB;AACvBR,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAR,MAAAA,QAAQ;AACT,KAHD,MAGO;AACLwB,MAAAA,KAAK,CACH,0EADG,CAAL;AAGD;AACF,GAVD;;AAYA,SAAO;AACLvB,IAAAA,QADK;AAELE,IAAAA,QAFK;AAGLE,IAAAA,MAHK;AAILE,IAAAA,SAJK;AAKLU,IAAAA,YALK;AAMLK,IAAAA;AANK,GAAP;AAQD,CA7DD;;GAAMvB,Q;;AA+DN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { omit } from \"lodash\";\n\nconst useLogin = (callback) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n\n  useEffect(() => {\n    console.log(\"COMING FROM useLogin\");\n    setSubmitted(false);\n  }, [username, password]);\n\n  const validate = (name, value) => {\n    switch (name) {\n      case \"username\":\n        if (!new RegExp(/^[A-Za-z-0-9]+$/).test(value)) {\n          setErrors(\"Incorrect username or password\");\n        } else setErrors(\"\");\n        break;\n\n      case \"password\":\n        if (!new RegExp(/^[A-Za-z-0-9]+$/).test(value) && value.length !== 12) {\n          setErrors(\"Incorrect username or password\");\n        } else setErrors(\"\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleChange = (e) => {\n    e.persist();\n\n    let name = e.target.name;\n    let val = e.target.value;\n\n    validate(name, val);\n\n    if (name === \"username\") setUsername(val);\n    if (name === \"password\") setPassword(val);\n  };\n\n  const handleSubmit = (e) => {\n    if (e) e.preventDefault();\n    if (errors.length === 0) {\n      setSubmitted(true);\n      callback();\n    } else {\n      alert(\n        \"Form was not submitted. Make sure required fields were filled correctly.\"\n      );\n    }\n  };\n\n  return {\n    username,\n    password,\n    errors,\n    submitted,\n    handleChange,\n    handleSubmit,\n  };\n};\n\nexport default useLogin;\n"]},"metadata":{},"sourceType":"module"}