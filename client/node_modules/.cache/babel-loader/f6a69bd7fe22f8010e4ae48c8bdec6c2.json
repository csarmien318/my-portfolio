{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRemoteResolver = exports.createRemoteInterceptor = void 0;\n\nvar headers_polyfill_1 = require(\"headers-polyfill\");\n\nvar outvariant_1 = require(\"outvariant\");\n\nvar strict_event_emitter_1 = require(\"strict-event-emitter\");\n\nvar createInterceptor_1 = require(\"./createInterceptor\");\n\nvar toIsoResponse_1 = require(\"./utils/toIsoResponse\");\n\nfunction requestReviver(key, value) {\n  switch (key) {\n    case 'url':\n      return new URL(value);\n\n    case 'headers':\n      return new headers_polyfill_1.Headers(value);\n\n    default:\n      return value;\n  }\n}\n/**\n * Creates a remote request interceptor that delegates\n * the mocked response resolution to the parent process.\n * The parent process must establish a remote resolver\n * by calling `createRemoteResolver` function.\n */\n\n\nfunction createRemoteInterceptor(options) {\n  outvariant_1.invariant(process.connected, \"Failed to create a remote interceptor: the current process (%s) does not have a parent. Please make sure you're spawning this process as a child process in order to use remote request interception.\", process.pid);\n\n  if (typeof process.send === 'undefined') {\n    throw new Error(\"Failed to create a remote interceptor: the current process (\" + process.pid + \") does not have the IPC enabled. Please make sure you're spawning this process with the \\\"ipc\\\" stdio value set:\\n\\nspawn('node', ['module.js'], { stdio: ['ipc'] })\");\n  }\n\n  var handleParentMessage;\n  var interceptor = createInterceptor_1.createInterceptor(__assign(__assign({}, options), {\n    resolver: function (request) {\n      var _a;\n\n      var serializedRequest = JSON.stringify(request);\n      (_a = process.send) === null || _a === void 0 ? void 0 : _a.call(process, \"request:\" + serializedRequest);\n      return new Promise(function (resolve) {\n        handleParentMessage = function (message) {\n          if (typeof message !== 'string') {\n            return;\n          }\n\n          if (message.startsWith(\"response:\" + request.id)) {\n            var _a = __read(message.match(/^response:.+?:(.+)$/) || [], 2),\n                responseString = _a[1];\n\n            if (!responseString) {\n              return resolve();\n            }\n\n            var mockedResponse = JSON.parse(responseString);\n            return resolve(mockedResponse);\n          }\n        };\n\n        process.addListener('message', handleParentMessage);\n      });\n    }\n  }));\n  return __assign(__assign({}, interceptor), {\n    restore: function () {\n      interceptor.restore();\n      process.removeListener('message', handleParentMessage);\n    }\n  });\n}\n\nexports.createRemoteInterceptor = createRemoteInterceptor;\n/**\n * Creates a response resolver function attached to the given `ChildProcess`.\n * The child process must establish a remote interceptor by calling `createRemoteInterceptor` function.\n */\n\nfunction createRemoteResolver(options) {\n  var _this = this;\n\n  var observer = new strict_event_emitter_1.StrictEventEmitter();\n\n  var handleChildMessage = function (message) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var _a, requestString, isoRequest_1, mockedResponse_1, serializedResponse;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (typeof message !== 'string') {\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (!message.startsWith('request:')) return [3\n            /*break*/\n            , 2];\n            _a = __read(message.match(/^request:(.+)$/) || [], 2), requestString = _a[1];\n\n            if (!requestString) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            isoRequest_1 = JSON.parse(requestString, requestReviver);\n            observer.emit('request', isoRequest_1);\n            return [4\n            /*yield*/\n            , options.resolver(isoRequest_1, undefined) // Send the mocked response to the child process.\n            ];\n\n          case 1:\n            mockedResponse_1 = _b.sent();\n            serializedResponse = JSON.stringify(mockedResponse_1);\n            options.process.send(\"response:\" + isoRequest_1.id + \":\" + serializedResponse, function (error) {\n              if (error) {\n                return;\n              }\n\n              if (mockedResponse_1) {\n                // Emit an optimisting \"response\" event at this point,\n                // not to rely on the back-and-forth signaling for the sake of the event.\n                observer.emit('response', isoRequest_1, toIsoResponse_1.toIsoResponse(mockedResponse_1));\n              }\n            });\n            _b.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  var cleanup = function () {\n    options.process.removeListener('message', handleChildMessage);\n  };\n\n  options.process.addListener('message', handleChildMessage);\n  options.process.addListener('disconnect', cleanup);\n  options.process.addListener('error', cleanup);\n  options.process.addListener('exit', cleanup);\n  return {\n    on: function (event, listener) {\n      observer.addListener(event, listener);\n    }\n  };\n}\n\nexports.createRemoteResolver = createRemoteResolver;","map":{"version":3,"sources":["../src/remote.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRemoteResolver = exports.createRemoteInterceptor = void 0;\nvar headers_polyfill_1 = require(\"headers-polyfill\");\nvar outvariant_1 = require(\"outvariant\");\nvar strict_event_emitter_1 = require(\"strict-event-emitter\");\nvar createInterceptor_1 = require(\"./createInterceptor\");\nvar toIsoResponse_1 = require(\"./utils/toIsoResponse\");\nfunction requestReviver(key, value) {\n    switch (key) {\n        case 'url':\n            return new URL(value);\n        case 'headers':\n            return new headers_polyfill_1.Headers(value);\n        default:\n            return value;\n    }\n}\n/**\n * Creates a remote request interceptor that delegates\n * the mocked response resolution to the parent process.\n * The parent process must establish a remote resolver\n * by calling `createRemoteResolver` function.\n */\nfunction createRemoteInterceptor(options) {\n    outvariant_1.invariant(process.connected, \"Failed to create a remote interceptor: the current process (%s) does not have a parent. Please make sure you're spawning this process as a child process in order to use remote request interception.\", process.pid);\n    if (typeof process.send === 'undefined') {\n        throw new Error(\"Failed to create a remote interceptor: the current process (\" + process.pid + \") does not have the IPC enabled. Please make sure you're spawning this process with the \\\"ipc\\\" stdio value set:\\n\\nspawn('node', ['module.js'], { stdio: ['ipc'] })\");\n    }\n    var handleParentMessage;\n    var interceptor = createInterceptor_1.createInterceptor(__assign(__assign({}, options), { resolver: function (request) {\n            var _a;\n            var serializedRequest = JSON.stringify(request);\n            (_a = process.send) === null || _a === void 0 ? void 0 : _a.call(process, \"request:\" + serializedRequest);\n            return new Promise(function (resolve) {\n                handleParentMessage = function (message) {\n                    if (typeof message !== 'string') {\n                        return;\n                    }\n                    if (message.startsWith(\"response:\" + request.id)) {\n                        var _a = __read(message.match(/^response:.+?:(.+)$/) || [], 2), responseString = _a[1];\n                        if (!responseString) {\n                            return resolve();\n                        }\n                        var mockedResponse = JSON.parse(responseString);\n                        return resolve(mockedResponse);\n                    }\n                };\n                process.addListener('message', handleParentMessage);\n            });\n        } }));\n    return __assign(__assign({}, interceptor), { restore: function () {\n            interceptor.restore();\n            process.removeListener('message', handleParentMessage);\n        } });\n}\nexports.createRemoteInterceptor = createRemoteInterceptor;\n/**\n * Creates a response resolver function attached to the given `ChildProcess`.\n * The child process must establish a remote interceptor by calling `createRemoteInterceptor` function.\n */\nfunction createRemoteResolver(options) {\n    var _this = this;\n    var observer = new strict_event_emitter_1.StrictEventEmitter();\n    var handleChildMessage = function (message) { return __awaiter(_this, void 0, void 0, function () {\n        var _a, requestString, isoRequest_1, mockedResponse_1, serializedResponse;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (typeof message !== 'string') {\n                        return [2 /*return*/];\n                    }\n                    if (!message.startsWith('request:')) return [3 /*break*/, 2];\n                    _a = __read(message.match(/^request:(.+)$/) || [], 2), requestString = _a[1];\n                    if (!requestString) {\n                        return [2 /*return*/];\n                    }\n                    isoRequest_1 = JSON.parse(requestString, requestReviver);\n                    observer.emit('request', isoRequest_1);\n                    return [4 /*yield*/, options.resolver(isoRequest_1, undefined)\n                        // Send the mocked response to the child process.\n                    ];\n                case 1:\n                    mockedResponse_1 = _b.sent();\n                    serializedResponse = JSON.stringify(mockedResponse_1);\n                    options.process.send(\"response:\" + isoRequest_1.id + \":\" + serializedResponse, function (error) {\n                        if (error) {\n                            return;\n                        }\n                        if (mockedResponse_1) {\n                            // Emit an optimisting \"response\" event at this point,\n                            // not to rely on the back-and-forth signaling for the sake of the event.\n                            observer.emit('response', isoRequest_1, toIsoResponse_1.toIsoResponse(mockedResponse_1));\n                        }\n                    });\n                    _b.label = 2;\n                case 2: return [2 /*return*/];\n            }\n        });\n    }); };\n    var cleanup = function () {\n        options.process.removeListener('message', handleChildMessage);\n    };\n    options.process.addListener('message', handleChildMessage);\n    options.process.addListener('disconnect', cleanup);\n    options.process.addListener('error', cleanup);\n    options.process.addListener('exit', cleanup);\n    return {\n        on: function (event, listener) {\n            observer.addListener(event, listener);\n        },\n    };\n}\nexports.createRemoteResolver = createRemoteResolver;\n//# sourceMappingURL=remote.js.map"]},"metadata":{},"sourceType":"script"}