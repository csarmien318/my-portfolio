{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\nconst isAuthed = cookies.get(\"isAuthed\");\nconst activeUser = cookies.get(\"user\");\naxios.defaults.withCredentials = true;\n\nconst useAuth = () => {\n  _s();\n\n  const [isUser, setUser] = useState(isAuthed);\n  const checkUser = localStorage.getItem(\"user\");\n  useEffect(() => {\n    // let mounted = true;\n    async function getData() {\n      await axios.post(\"http://localhost:8080/api/auth\", {\n        withCredentials: true\n      }).then(res => {\n        if (res) {\n          setUser(true);\n        }\n      }).catch(err => {\n        const {\n          status\n        } = err.response;\n\n        if (status === 401 || status === 403) {\n          handleLogout();\n\n          if (checkUser) {\n            alert(\"Unauthorized\");\n            window.location.reload();\n          } // mounted = false;\n\n        }\n      });\n    }\n\n    getData(); // return () => {\n    //   if (!mounted) {\n    //     window.location.reload();\n    //   }\n    //   console.log(\"HERE!!! \", mounted);\n    //   mounted = false;\n    // };\n  }, []); // useEffect(() => {\n  //   let mounted = true;\n  //   if (mounted) {\n  //     if (checkUser) {\n  //       console.log(\"checkUser: \", checkUser);\n  //       const currentUser = JSON.parse(checkUser);\n  //       setUser(currentUser);\n  //     } else {\n  //       setUser();\n  //     }\n  //   }\n  //   return () => {\n  //     mounted = false;\n  //   };\n  // }, [isUser]);\n\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/login\", JSON.stringify({\n        username,\n        password\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true\n      });\n      window.location.reload();\n      let name = JSON.stringify(response.data.user);\n      cookies.set(\"user\", name, {\n        secure: true\n      });\n      localStorage.setItem(\"user\", name);\n      setUser(true);\n    } catch (err) {\n      var _err$response, _err$response2;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        alert(\"An unexpected error occurred. Please try again later.\");\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        alert(\"Missing Username or Password\");\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        alert(\"Incorrect username or password\");\n        console.log(\"Incorrect username or password\");\n      } else {\n        alert(\"Login Failed\");\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    axios.delete(\"http://localhost:8080/api/clear-cookies\");\n    axios.get(\"http://localhost:8080/api/logout\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      withCredential: true\n    }).then(() => {\n      localStorage.clear(); // window.location.reload();\n    }).catch(() => {\n      console.log(\"An internal server error has occurred.\");\n    });\n    localStorage.clear();\n    cookies.remove(\"user\");\n  };\n\n  return {\n    isUser,\n    activeUser,\n    setUser,\n    handleLogin,\n    handleLogout\n  };\n};\n\n_s(useAuth, \"trKA8PJQGebFRwv7j8B9Sk0Qrq0=\");\n\nexport default useAuth; // TODO: Make a function validateInput that checks\n// const validateInput = (username, password) => {\n//   if (!(username has a number && lowercase letters)) {\n//     return false;\n//   }\n//   if (!(password has numbers && has uppercase letters && lowercase letters)) {\n//     return false;\n//   }\n//\n//   return true;\n// }","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/hooks/useAuth.js"],"names":["useState","useEffect","axios","Cookies","cookies","isAuthed","get","activeUser","defaults","withCredentials","useAuth","isUser","setUser","checkUser","localStorage","getItem","getData","post","then","res","catch","err","status","response","handleLogout","alert","window","location","reload","handleLogin","username","password","JSON","stringify","headers","name","data","user","set","secure","setItem","console","log","delete","withCredential","clear","remove"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\nconst isAuthed = cookies.get(\"isAuthed\");\nconst activeUser = cookies.get(\"user\");\n\naxios.defaults.withCredentials = true;\n\nconst useAuth = () => {\n  const [isUser, setUser] = useState(isAuthed);\n  const checkUser = localStorage.getItem(\"user\");\n\n  useEffect(() => {\n    // let mounted = true;\n    async function getData() {\n      await axios\n        .post(\"http://localhost:8080/api/auth\", {\n          withCredentials: true,\n        })\n        .then((res) => {\n          if (res) {\n            setUser(true);\n          }\n        })\n        .catch((err) => {\n          const { status } = err.response;\n          if (status === 401 || status === 403) {\n            handleLogout();\n            if (checkUser) {\n              alert(\"Unauthorized\");\n              window.location.reload();\n            }\n            // mounted = false;\n          }\n        });\n    }\n    getData();\n    // return () => {\n    //   if (!mounted) {\n    //     window.location.reload();\n    //   }\n    //   console.log(\"HERE!!! \", mounted);\n    //   mounted = false;\n    // };\n  }, []);\n\n  // useEffect(() => {\n  //   let mounted = true;\n  //   if (mounted) {\n  //     if (checkUser) {\n  //       console.log(\"checkUser: \", checkUser);\n  //       const currentUser = JSON.parse(checkUser);\n  //       setUser(currentUser);\n  //     } else {\n  //       setUser();\n  //     }\n  //   }\n  //   return () => {\n  //     mounted = false;\n  //   };\n  // }, [isUser]);\n\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await axios.post(\n        \"http://localhost:8080/api/login\",\n        JSON.stringify({ username, password }),\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          withCredentials: true,\n        }\n      );\n      window.location.reload();\n      let name = JSON.stringify(response.data.user);\n      cookies.set(\"user\", name, {\n        secure: true,\n      });\n      localStorage.setItem(\"user\", name);\n      setUser(true);\n    } catch (err) {\n      if (!err?.response) {\n        alert(\"An unexpected error occurred. Please try again later.\");\n      } else if (err.response?.status === 400) {\n        alert(\"Missing Username or Password\");\n      } else if (err.response?.status === 401) {\n        alert(\"Incorrect username or password\");\n        console.log(\"Incorrect username or password\");\n      } else {\n        alert(\"Login Failed\");\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    axios.delete(\"http://localhost:8080/api/clear-cookies\");\n    axios\n      .get(\"http://localhost:8080/api/logout\", {\n        headers: { \"Content-Type\": \"application/json\" },\n        withCredential: true,\n      })\n      .then(() => {\n        localStorage.clear();\n        // window.location.reload();\n      })\n      .catch(() => {\n        console.log(\"An internal server error has occurred.\");\n      });\n\n    localStorage.clear();\n    cookies.remove(\"user\");\n  };\n\n  return {\n    isUser,\n    activeUser,\n    setUser,\n    handleLogin,\n    handleLogout,\n  };\n};\n\nexport default useAuth;\n\n// TODO: Make a function validateInput that checks\n// const validateInput = (username, password) => {\n//   if (!(username has a number && lowercase letters)) {\n//     return false;\n//   }\n//   if (!(password has numbers && has uppercase letters && lowercase letters)) {\n//     return false;\n//   }\n//\n//   return true;\n// }\n"]},"metadata":{},"sourceType":"module"}