{"ast":null,"code":"import _asyncToGenerator from\"/Users/chritsophersarmiento/git/my-portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"/Users/chritsophersarmiento/git/my-portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/chritsophersarmiento/git/my-portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/chritsophersarmiento/git/my-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/chritsophersarmiento/git/my-portfolio/node_modules/@babel/runtime/regenerator/index.js\";import{useState,useEffect}from\"react\";import axios from\"axios\";import{omit}from\"lodash\";export var useContact=function useContact(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),submitted=_useState6[0],setSubmitted=_useState6[1];useEffect(function(){setSubmitted(false);},[values]);var validate=function validate(name,value){switch(name){case\"username\":if(value.length<=1){setErrors(_objectSpread(_objectSpread({},errors),{},{username:\"Your name must contain at least 2 letters\"}));}else{var newObj=omit(errors,\"username\");setErrors(newObj);}break;case\"email\":if(!new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(value)){setErrors(_objectSpread(_objectSpread({},errors),{},{email:\"Please enter a valid email (ex: johndoe@email.com)\"}));}else{var _newObj=omit(errors,\"email\");setErrors(_newObj);}break;}};var handleChange=function handleChange(e){e.persist();var name=e.target.name;var val=e.target.value;validate(name,val);setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},name,val)));};var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(!(Object.keys(errors).length===0)){_context.next=18;break;}setSubmitted(true);console.log(\"Form Values: \",values);_context.prev=4;_context.next=7;return axios.post(\"http://localhost:8080/api/auth\");case 7:_context.next=9;return axios.post(\"http://localhost:8080/api/save\",values,{headers:{\"Content-Type\":\"application/json\"},withCredentials:true});case 9:alert(\"Your response was submitted, thank you for reaching out!\");window.location.reload();_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](4);alert(_context.t0===null||_context.t0===void 0?void 0:_context.t0.response);case 16:_context.next=19;break;case 18:alert(\"Form was not submitted. Make sure required fields were filled correctly.\");case 19:case\"end\":return _context.stop();}}},_callee,null,[[4,13]]);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();return{values:values,errors:errors,submitted:submitted,validate:validate,setValues:setValues,handleChange:handleChange,handleSubmit:handleSubmit};};","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/hooks/useContact.js"],"names":["useState","useEffect","axios","omit","useContact","values","setValues","errors","setErrors","submitted","setSubmitted","validate","name","value","length","username","newObj","RegExp","test","email","handleChange","e","persist","target","val","handleSubmit","preventDefault","Object","keys","console","log","post","headers","withCredentials","alert","window","location","reload","response"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { omit } from \"lodash\";\n\nexport const useContact = () => {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n\n  useEffect(() => {\n    setSubmitted(false);\n  }, [values]);\n\n  const validate = (name, value) => {\n    switch (name) {\n      case \"username\":\n        if (value.length <= 1) {\n          setErrors({\n            ...errors,\n            username: \"Your name must contain at least 2 letters\",\n          });\n        } else {\n          let newObj = omit(errors, \"username\");\n          setErrors(newObj);\n        }\n        break;\n\n      case \"email\":\n        if (\n          !new RegExp(\n            /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n          ).test(value)\n        ) {\n          setErrors({\n            ...errors,\n            email: \"Please enter a valid email (ex: johndoe@email.com)\",\n          });\n        } else {\n          let newObj = omit(errors, \"email\");\n          setErrors(newObj);\n        }\n        break;\n    }\n  };\n\n  const handleChange = (e) => {\n    e.persist();\n\n    let name = e.target.name;\n    let val = e.target.value;\n\n    validate(name, val);\n\n    setValues({\n      ...values,\n      [name]: val,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (Object.keys(errors).length === 0) {\n      setSubmitted(true);\n      console.log(\"Form Values: \", values);\n      try {\n        await axios.post(\"http://localhost:8080/api/auth\");\n        await axios.post(\"http://localhost:8080/api/save\", values, {\n          headers: { \"Content-Type\": \"application/json\" },\n          withCredentials: true,\n        });\n        alert(\"Your response was submitted, thank you for reaching out!\");\n        window.location.reload();\n      } catch (error) {\n        alert(error?.response);\n      }\n    } else {\n      alert(\n        \"Form was not submitted. Make sure required fields were filled correctly.\"\n      );\n    }\n  };\n\n  return {\n    values,\n    errors,\n    submitted,\n    validate,\n    setValues,\n    handleChange,\n    handleSubmit,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}