{"ast":null,"code":"var _jsxFileName = \"/Users/chritsophersarmiento/git/my-portfolio/src/pages/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { useNavigate } from \"react-router-dom\";\nimport Page from \"../components/Page\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    authenticate,\n    user,\n    setUser\n  } = _ref;\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\"); // useEffect(() => {\n  //   return () => {};\n  // }, []);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      var _response$data, _response$data2;\n\n      // const user = { username, password };\n      // const response = await axios.post(\"/api/login\", user);\n      const response = await axios.post(\"/api/login\", JSON.stringify({\n        username,\n        password\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true\n      });\n      console.log(JSON.stringify(response.data)); // setUser(response.data);\n\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n      const accessToken = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.accessToken;\n      const refreshToken = response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.refreshToken; // setUser({ username: username, token: refreshToken });\n\n      await axios.post(\"/api/token\", JSON.stringify({\n        username,\n        refreshToken\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setUsername(\"\");\n      setPassword(\"\"); // authenticate();\n\n      navigate(\"/\");\n      window.location.reload();\n    } catch (err) {\n      var _err$response, _err$response2;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrorMsg(\"No Server Response\");\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        setErrorMsg(\"Missing Username or Password\");\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        setErrorMsg(\"Incorrect username or password\");\n        console.log(\"Incorrect username or password\");\n      } else {\n        setErrorMsg(\"Login Failed\");\n      } // setUser({ username: \"\", token: \"\" });\n\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-md col-4\",\n      style: {\n        width: \"480px\",\n        marginBottom: \"40px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [/*#__PURE__*/_jsxDEV(\"em\", {\n              className: \"lead fs-6\",\n              children: \"To view this website, please enter the credentials provided.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger text-center\",\n              style: {\n                paddingTop: \"10px\"\n              },\n              children: errorMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                value: username,\n                type: \"text\",\n                placeholder: \"Enter username\",\n                onChange: e => setUsername(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                value: password,\n                type: \"password\",\n                placeholder: \"Password\",\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"col-3\",\n                variant: \"primary\",\n                type: \"submit\",\n                onClick: onSubmit,\n                disabled: username && password ? false : true,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"DOtUXyUjc5iKhqvW5fEALZp2fzA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n  setUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/pages/Login.jsx"],"names":["React","useState","useEffect","axios","PropTypes","useNavigate","Page","Button","Card","Form","Login","authenticate","user","setUser","navigate","username","setUsername","password","setPassword","errorMsg","setErrorMsg","onSubmit","e","preventDefault","response","post","JSON","stringify","headers","withCredentials","console","log","data","localStorage","setItem","accessToken","refreshToken","window","location","reload","err","status","width","marginBottom","paddingTop","target","value","propTypes","func","isRequired","object"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { useNavigate } from \"react-router-dom\";\nimport Page from \"../components/Page\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\n\nconst Login = ({ authenticate, user, setUser }) => {\n  const navigate = useNavigate();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  // useEffect(() => {\n  //   return () => {};\n  // }, []);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // const user = { username, password };\n      // const response = await axios.post(\"/api/login\", user);\n      const response = await axios.post(\n        \"/api/login\",\n        JSON.stringify({ username, password }),\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          withCredentials: true,\n        }\n      );\n      console.log(JSON.stringify(response.data));\n      // setUser(response.data);\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n      const accessToken = response?.data?.accessToken;\n      const refreshToken = response?.data?.refreshToken;\n      // setUser({ username: username, token: refreshToken });\n\n      await axios.post(\n        \"/api/token\",\n        JSON.stringify({ username, refreshToken }),\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n\n      setUsername(\"\");\n      setPassword(\"\");\n      // authenticate();\n      navigate(\"/\");\n      window.location.reload();\n    } catch (err) {\n      if (!err?.response) {\n        setErrorMsg(\"No Server Response\");\n      } else if (err.response?.status === 400) {\n        setErrorMsg(\"Missing Username or Password\");\n      } else if (err.response?.status === 401) {\n        setErrorMsg(\"Incorrect username or password\");\n        console.log(\"Incorrect username or password\");\n      } else {\n        setErrorMsg(\"Login Failed\");\n      }\n      // setUser({ username: \"\", token: \"\" });\n    }\n  };\n\n  return (\n    <Page title=\"Login\">\n      <div\n        className=\"container-md col-4\"\n        style={{ width: \"480px\", marginBottom: \"40px\" }}\n      >\n        <Card>\n          <Card.Body>\n            <Card.Text>\n              <em className=\"lead fs-6\">\n                To view this website, please enter the credentials provided.\n              </em>\n              {errorMsg && (\n                <p\n                  className=\"text-danger text-center\"\n                  style={{ paddingTop: \"10px\" }}\n                >\n                  {errorMsg}\n                </p>\n              )}\n            </Card.Text>\n            <Form onSubmit={onSubmit}>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  value={username}\n                  type=\"text\"\n                  placeholder=\"Enter username\"\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  value={password}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Form.Group>\n              <div className=\"d-flex justify-content-center\">\n                <Button\n                  className=\"col-3\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={onSubmit}\n                  disabled={username && password ? false : true}\n                >\n                  Submit\n                </Button>\n              </div>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    </Page>\n  );\n};\n\nexport default Login;\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n  setUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}