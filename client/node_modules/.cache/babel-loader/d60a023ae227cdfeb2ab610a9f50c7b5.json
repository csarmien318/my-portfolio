{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies(); // const authedSession = cookies.get(\"authedSession\");\n// const authedToken = cookies.get(\"authedToken\");\n\nconst useAuth = () => {\n  _s();\n\n  const [isUser, setIsUser] = useState(false);\n  const [user, setUser] = useState(\"\"); // useEffect(() => {\n  // }, [isUser]);\n  // const [isUser, setIsUser] = useState(() => {\n  //   if (authedSession) return true;\n  //   return false;\n  // });\n  // const [user, setUser] = useState(localStorage.getItem(\"user\"));\n  // const [user, setUser] = useState(() => {\n  //   if (!isUser) return \"\";\n  //   return localStorage.getItem(\"user\");\n  // });\n  // useEffect(() => {\n  //   if (authedSession)\n  // }, [])\n  // useEffect(() => {\n  //   if (authedSession) {\n  //     const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  //     setUser(currentUser);\n  //     setIsUser(authedSession);\n  //   } else {\n  //     setUser();\n  //     setIsUser(false);\n  //   }\n  // }, []);\n\n  console.log(\"From useAuth isUser - \", isUser);\n  console.log(\"From useAuth user - \", user);\n\n  const handleLogin = async (username, password) => {\n    try {\n      await axios.post(\"/api/login\", JSON.stringify({\n        username,\n        password\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      localStorage.setItem(\"user\", username); // localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      // setUser(response.data.user);\n\n      setUser(localStorage.getItem(\"user\"));\n      setIsUser(true);\n    } catch (err) {\n      var _err$response, _err$response2;\n\n      if (!(err !== null && err !== void 0 && err.response)) {// setErrorMsg(\"No Server Response\");\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {// setErrorMsg(\"Missing Username or Password\");\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        // setErrorMsg(\"Incorrect username or password\");\n        console.log(\"Incorrect username or password\");\n      } else {// setErrorMsg(\"Login Failed\");\n      }\n    }\n  };\n\n  const handleLogout = async () => {\n    await axios.delete(\"/api/logout\", user, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => {\n      // localStorage.clear();\n      console.log(\"Logged out successfully.\");\n    }).catch(() => {\n      console.log(\"An internal server error has occurred.\");\n    }); // localStorage.clear();\n\n    setUser(\"\");\n    setIsUser(false); // window.location.reload();\n  };\n\n  return {\n    user,\n    isUser,\n    setUser,\n    setIsUser,\n    handleLogin,\n    handleLogout\n  };\n};\n\n_s(useAuth, \"BJtXSCcaeN4nWC54W2LRlGpLo0w=\");\n\nexport default useAuth;","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/hooks/useAuth.js"],"names":["useState","useEffect","axios","Cookies","cookies","useAuth","isUser","setIsUser","user","setUser","console","log","handleLogin","username","password","post","JSON","stringify","headers","localStorage","setItem","getItem","err","response","status","handleLogout","delete","then","catch"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB,C,CAEA;AACA;;AAEA,MAAME,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC,CAFoB,CAIpB;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCL,MAAtC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,IAApC;;AAEA,QAAMI,WAAW,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChD,QAAI;AACF,YAAMZ,KAAK,CAACa,IAAN,CAAW,YAAX,EAAyBC,IAAI,CAACC,SAAL,CAAe;AAAEJ,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAf,CAAzB,EAAiE;AACrEI,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAD4D,OAAjE,CAAN;AAIAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BP,QAA7B,EALE,CAMF;AAEA;;AACAJ,MAAAA,OAAO,CAACU,YAAY,CAACE,OAAb,CAAqB,MAArB,CAAD,CAAP;AACAd,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAXD,CAWE,OAAOe,GAAP,EAAY;AAAA;;AACZ,UAAI,EAACA,GAAD,aAACA,GAAD,eAACA,GAAG,CAAEC,QAAN,CAAJ,EAAoB,CAClB;AACD,OAFD,MAEO,IAAI,kBAAAD,GAAG,CAACC,QAAJ,gEAAcC,MAAd,MAAyB,GAA7B,EAAkC,CACvC;AACD,OAFM,MAEA,IAAI,mBAAAF,GAAG,CAACC,QAAJ,kEAAcC,MAAd,MAAyB,GAA7B,EAAkC;AACvC;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD,OAHM,MAGA,CACL;AACD;AACF;AACF,GAxBD;;AA0BA,QAAMc,YAAY,GAAG,YAAY;AAC/B,UAAMvB,KAAK,CACRwB,MADG,CACI,aADJ,EACmBlB,IADnB,EACyB;AAC3BU,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AADkB,KADzB,EAIHS,IAJG,CAIE,MAAM;AACV;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,KAPG,EAQHiB,KARG,CAQG,MAAM;AACXlB,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACD,KAVG,CAAN,CAD+B,CAa/B;;AACAF,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,IAAAA,SAAS,CAAC,KAAD,CAAT,CAf+B,CAgB/B;AACD,GAjBD;;AAmBA,SAAO;AACLC,IAAAA,IADK;AAELF,IAAAA,MAFK;AAGLG,IAAAA,OAHK;AAILF,IAAAA,SAJK;AAKLK,IAAAA,WALK;AAMLa,IAAAA;AANK,GAAP;AAQD,CAzFD;;GAAMpB,O;;AA2FN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n\n// const authedSession = cookies.get(\"authedSession\");\n// const authedToken = cookies.get(\"authedToken\");\n\nconst useAuth = () => {\n  const [isUser, setIsUser] = useState(false);\n  const [user, setUser] = useState(\"\");\n\n  // useEffect(() => {\n\n  // }, [isUser]);\n\n  // const [isUser, setIsUser] = useState(() => {\n  //   if (authedSession) return true;\n  //   return false;\n  // });\n  // const [user, setUser] = useState(localStorage.getItem(\"user\"));\n  // const [user, setUser] = useState(() => {\n  //   if (!isUser) return \"\";\n  //   return localStorage.getItem(\"user\");\n  // });\n\n  // useEffect(() => {\n  //   if (authedSession)\n  // }, [])\n\n  // useEffect(() => {\n  //   if (authedSession) {\n  //     const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  //     setUser(currentUser);\n  //     setIsUser(authedSession);\n  //   } else {\n  //     setUser();\n  //     setIsUser(false);\n  //   }\n  // }, []);\n\n  console.log(\"From useAuth isUser - \", isUser);\n  console.log(\"From useAuth user - \", user);\n\n  const handleLogin = async (username, password) => {\n    try {\n      await axios.post(\"/api/login\", JSON.stringify({ username, password }), {\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n\n      localStorage.setItem(\"user\", username);\n      // localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n\n      // setUser(response.data.user);\n      setUser(localStorage.getItem(\"user\"));\n      setIsUser(true);\n    } catch (err) {\n      if (!err?.response) {\n        // setErrorMsg(\"No Server Response\");\n      } else if (err.response?.status === 400) {\n        // setErrorMsg(\"Missing Username or Password\");\n      } else if (err.response?.status === 401) {\n        // setErrorMsg(\"Incorrect username or password\");\n        console.log(\"Incorrect username or password\");\n      } else {\n        // setErrorMsg(\"Login Failed\");\n      }\n    }\n  };\n\n  const handleLogout = async () => {\n    await axios\n      .delete(\"/api/logout\", user, {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then(() => {\n        // localStorage.clear();\n        console.log(\"Logged out successfully.\");\n      })\n      .catch(() => {\n        console.log(\"An internal server error has occurred.\");\n      });\n\n    // localStorage.clear();\n    setUser(\"\");\n    setIsUser(false);\n    // window.location.reload();\n  };\n\n  return {\n    user,\n    isUser,\n    setUser,\n    setIsUser,\n    handleLogin,\n    handleLogout,\n  };\n};\n\nexport default useAuth;\n"]},"metadata":{},"sourceType":"module"}