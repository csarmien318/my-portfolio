{"ast":null,"code":"import { rest } from \"msw\";\nexport const handlers = [rest.post(\"http://localhost:8080/api/auth\", (req, res, ctx) => {\n  return res(ctx.status(200), ctx.json({\n    mockToken: \"mockToken\"\n  }));\n}), rest.post(\"http://localhost:8080/api/save\", async (req, res, ctx) => {\n  return res(ctx.delay(500), ctx.json({\n    msg: \"Data has been saved!\"\n  }));\n}), rest.post(\"http://localhost:8080/api/login\", async (req, res, ctx) => {\n  const user = req.body;\n  console.log(user);\n  const {\n    username\n  } = user;\n  const {\n    password\n  } = user;\n  const activeUser = {\n    username: \"test1000\"\n  }; // if (username === \"test1000\" && password === \"test1000test\") {\n\n  return res(ctx.cookie(\"user\", activeUser, {\n    origin: \"http://localhost:3000\",\n    sameSite: \"strict\",\n    secure: true\n  }), ctx.cookie(\"accessToken\", {\n    expires: new Date(new Date().getTime() + 1800 * 1000),\n    origin: \"http://localhost:3000\",\n    sameSite: \"strict\",\n    secure: true,\n    httpOnly: true\n  }), ctx.cookie(\"refreshToken\", {\n    expires: new Date(new Date().getTime() + 31557600000),\n    origin: \"http://localhost:3000\",\n    sameSite: \"strict\",\n    secure: true,\n    httpOnly: true\n  }), ctx.cookie(\"authedSession\", true, {\n    expires: new Date(new Date().getTime() + 1800 * 1000),\n    origin: \"http://localhost:3000\",\n    sameSite: \"strict\",\n    secure: true\n  }), ctx.cookie(\"isAuthed\", true, {\n    expires: new Date(new Date().getTime() + 31557600000),\n    origin: \"http://localhost:3000\",\n    sameSite: \"strict\",\n    secure: true\n  }), ctx.status(202), ctx.json({\n    user\n  })); // }\n  // return res(ctx.status(401));\n}), // rest.post(\"http://localhost:8080/api/login\", async (req, res, ctx) => {\n//   const user = req.body;\n//   const { username } = user;\n//   const { password } = user;\n//   if (username === \"test1000\" && password === \"test1000test\") {\n//     return res(ctx.status(202), ctx.json({ user }));\n//   }\n//   return res(ctx.status(401));\n// }),\nrest.get(\"http://localhost:8080/api/songs\", (req, res, ctx) => {\n  return res(ctx.status(200), ctx.json([{\n    _id: \"5b21ca3eeb7f6fbccd47182b\",\n    title: \"House Of Cards\",\n    artist: \"Radiohead\",\n    album: \"In Rainbows\",\n    songLength: \"5:28\",\n    releaseYear: \"2007\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Money\",\n    artist: \"Pink Floyd\",\n    album: \"The Dark Side of the Moon\",\n    songLength: \"6:22\",\n    releaseYear: \"1973\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"What Difference Does It Make?\",\n    artist: \"The Smiths\",\n    album: \"Hatful of Hollow\",\n    songLength: \"3:51\",\n    releaseYear: \"1984\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Have a Cigar\",\n    artist: \"Pink Floyd\",\n    album: \"Wish You Were Here\",\n    songLength: \"5:07\",\n    releaseYear: \"1975\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd471822\",\n    title: \"Morning Bell\",\n    artist: \"Radiohead\",\n    album: \"Kid A\",\n    songLength: \"4:35\",\n    releaseYear: \"2000\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Wish You Were Here\",\n    artist: \"Pink Floyd\",\n    album: \"Wish You Were Here\",\n    songLength: \"5:41\",\n    releaseYear: \"1975\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Bigmouth Strikes Again\",\n    artist: \"The Smiths\",\n    album: \"The Queen Is Dead\",\n    songLength: \"3:12\",\n    releaseYear: \"1986\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd47182a\",\n    title: \"Weird Fishes/Arpeggi\",\n    artist: \"Radiohead\",\n    album: \"In Rainbows\",\n    songLength: \"5:18\",\n    releaseYear: \"2007\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Time\",\n    artist: \"Pink Floyd\",\n    album: \"The Dark Side of the Moon\",\n    songLength: \"6:52\",\n    releaseYear: \"1973\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"Heaven Knows I'm Miserable Now\",\n    artist: \"The Smiths\",\n    album: \"Hatful of Hollow\",\n    songLength: \"3:35\",\n    releaseYear: \"1984\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"Optimistic\",\n    artist: \"Radiohead\",\n    album: \"Kid A\",\n    songLength: \"5:15\",\n    releaseYear: \"2000\"\n  }, {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"There Is a Light That Never Goes Out\",\n    artist: \"The Smiths\",\n    album: \"The Queen Is Dead\",\n    songLength: \"4:02\",\n    releaseYear: \"1986\"\n  }]));\n})]; // export const handlers = [\n//   rest.post(\"http://localhost:8080/api/save\", async (req, res, ctx) => {\n//     return res(\n//       ctx.delay(500),\n//       ctx.json({\n//         msg: \"Data has been saved!\",\n//       })\n//     );\n//   }),\n//   rest.post(\"http://localhost:8080/api/save\", (req, res, ctx) => {\n//     return res(\n//       ctx.status(500),\n//       ctx.json({\n//         msg: \"Sorry, an internal server error has occurred\",\n//       })\n//     );\n//   }),\n//   rest.post(\"http://localhost:8080/api/auth\", (req, res, ctx) => {\n//     return res(ctx.status(200), ctx.json({ mockToken: \"mockToken\" }));\n//   }),\n//   rest.post(\"http://localhost:8080/api/auth\", (req, res, ctx) => {\n//     return res(ctx.status(401));\n//   }),\n//   rest.post(\"http://localhost:8080/api/login\", (req, res, ctx) => {\n//     const mockToken = \"mockToken\";\n//     const user = {\n//       username: \"mockUsername\",\n//     };\n//     return res(\n//       ctx.cookie(\"mockToken\", mockToken, {\n//         expires: new Date(new Date().getTime() + 31557600000),\n//         origin: \"http://localhost:3000\",\n//         sameSite: \"strict\",\n//         secure: true,\n//         httpOnly: true,\n//       }),\n//       ctx.status(202),\n//       ctx.json({ user })\n//     );\n//   }),\n//   rest.post(\"http://localhost:8080/api/logout\", (req, res, ctx) => {\n//     return res(ctx.json(\"mockLogout Success\"));\n//   }),\n//   rest.post(\"http://localhost:8080/api/clear-cookies\", (req, res, ctx) => {\n//     return res(ctx.json(\"mockLogout Success\"));\n//   }),\n//   rest.get(\"http://localhost:8080/api/songs\", (req, res, ctx) => {\n//     return res(\n//       ctx.status(200),\n//       ctx.json([\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47182b\",\n//           title: \"House Of Cards\",\n//           artist: \"Radiohead\",\n//           album: \"In Rainbows\",\n//           songLength: \"5:28\",\n//           releaseYear: \"2007\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471816\",\n//           title: \"Money\",\n//           artist: \"Pink Floyd\",\n//           album: \"The Dark Side of the Moon\",\n//           songLength: \"6:22\",\n//           releaseYear: \"1973\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181e\",\n//           title: \"What Difference Does It Make?\",\n//           artist: \"The Smiths\",\n//           album: \"Hatful of Hollow\",\n//           songLength: \"3:51\",\n//           releaseYear: \"1984\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471817\",\n//           title: \"Have a Cigar\",\n//           artist: \"Pink Floyd\",\n//           album: \"Wish You Were Here\",\n//           songLength: \"5:07\",\n//           releaseYear: \"1975\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471822\",\n//           title: \"Morning Bell\",\n//           artist: \"Radiohead\",\n//           album: \"Kid A\",\n//           songLength: \"4:35\",\n//           releaseYear: \"2000\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471819\",\n//           title: \"Wish You Were Here\",\n//           artist: \"Pink Floyd\",\n//           album: \"Wish You Were Here\",\n//           songLength: \"5:41\",\n//           releaseYear: \"1975\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181a\",\n//           title: \"Bigmouth Strikes Again\",\n//           artist: \"The Smiths\",\n//           album: \"The Queen Is Dead\",\n//           songLength: \"3:12\",\n//           releaseYear: \"1986\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47182a\",\n//           title: \"Weird Fishes/Arpeggi\",\n//           artist: \"Radiohead\",\n//           album: \"In Rainbows\",\n//           songLength: \"5:18\",\n//           releaseYear: \"2007\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471815\",\n//           title: \"Time\",\n//           artist: \"Pink Floyd\",\n//           album: \"The Dark Side of the Moon\",\n//           songLength: \"6:52\",\n//           releaseYear: \"1973\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181f\",\n//           title: \"Heaven Knows I'm Miserable Now\",\n//           artist: \"The Smiths\",\n//           album: \"Hatful of Hollow\",\n//           songLength: \"3:35\",\n//           releaseYear: \"1984\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471821\",\n//           title: \"Optimistic\",\n//           artist: \"Radiohead\",\n//           album: \"Kid A\",\n//           songLength: \"5:15\",\n//           releaseYear: \"2000\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181b\",\n//           title: \"There Is a Light That Never Goes Out\",\n//           artist: \"The Smiths\",\n//           album: \"The Queen Is Dead\",\n//           songLength: \"4:02\",\n//           releaseYear: \"1986\",\n//         },\n//       ])\n//     );\n//   }),\n//   rest.get(\"http://localhost:8080/api/songs\", (req, res, ctx) => {\n//     return res(ctx.status(500), ctx.json({ msg: \"Error retrieving songs\" }));\n//   }),\n// ];","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/mocks/handlers.js"],"names":["rest","handlers","post","req","res","ctx","status","json","mockToken","delay","msg","user","body","console","log","username","password","activeUser","cookie","origin","sameSite","secure","expires","Date","getTime","httpOnly","get","_id","title","artist","album","songLength","releaseYear"],"mappings":"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":["import { rest } from \"msw\";\n\nexport const handlers = [\n  rest.post(\"http://localhost:8080/api/auth\", (req, res, ctx) => {\n    return res(ctx.status(200), ctx.json({ mockToken: \"mockToken\" }));\n  }),\n\n  rest.post(\"http://localhost:8080/api/save\", async (req, res, ctx) => {\n    return res(\n      ctx.delay(500),\n      ctx.json({\n        msg: \"Data has been saved!\",\n      })\n    );\n  }),\n\n  rest.post(\"http://localhost:8080/api/login\", async (req, res, ctx) => {\n    const user = req.body;\n    console.log(user);\n    const { username } = user;\n    const { password } = user;\n\n    const activeUser = {\n      username: \"test1000\",\n    };\n\n    // if (username === \"test1000\" && password === \"test1000test\") {\n    return res(\n      ctx.cookie(\"user\", activeUser, {\n        origin: \"http://localhost:3000\",\n        sameSite: \"strict\",\n        secure: true,\n      }),\n      ctx.cookie(\"accessToken\", {\n        expires: new Date(new Date().getTime() + 1800 * 1000),\n        origin: \"http://localhost:3000\",\n        sameSite: \"strict\",\n        secure: true,\n        httpOnly: true,\n      }),\n      ctx.cookie(\"refreshToken\", {\n        expires: new Date(new Date().getTime() + 31557600000),\n        origin: \"http://localhost:3000\",\n        sameSite: \"strict\",\n        secure: true,\n        httpOnly: true,\n      }),\n      ctx.cookie(\"authedSession\", true, {\n        expires: new Date(new Date().getTime() + 1800 * 1000),\n        origin: \"http://localhost:3000\",\n        sameSite: \"strict\",\n        secure: true,\n      }),\n      ctx.cookie(\"isAuthed\", true, {\n        expires: new Date(new Date().getTime() + 31557600000),\n        origin: \"http://localhost:3000\",\n        sameSite: \"strict\",\n        secure: true,\n      }),\n      ctx.status(202),\n      ctx.json({ user })\n    );\n    // }\n\n    // return res(ctx.status(401));\n  }),\n\n  // rest.post(\"http://localhost:8080/api/login\", async (req, res, ctx) => {\n  //   const user = req.body;\n  //   const { username } = user;\n  //   const { password } = user;\n\n  //   if (username === \"test1000\" && password === \"test1000test\") {\n  //     return res(ctx.status(202), ctx.json({ user }));\n  //   }\n\n  //   return res(ctx.status(401));\n  // }),\n\n  rest.get(\"http://localhost:8080/api/songs\", (req, res, ctx) => {\n    return res(\n      ctx.status(200),\n      ctx.json([\n        {\n          _id: \"5b21ca3eeb7f6fbccd47182b\",\n          title: \"House Of Cards\",\n          artist: \"Radiohead\",\n          album: \"In Rainbows\",\n          songLength: \"5:28\",\n          releaseYear: \"2007\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd471816\",\n          title: \"Money\",\n          artist: \"Pink Floyd\",\n          album: \"The Dark Side of the Moon\",\n          songLength: \"6:22\",\n          releaseYear: \"1973\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd47181e\",\n          title: \"What Difference Does It Make?\",\n          artist: \"The Smiths\",\n          album: \"Hatful of Hollow\",\n          songLength: \"3:51\",\n          releaseYear: \"1984\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd471817\",\n          title: \"Have a Cigar\",\n          artist: \"Pink Floyd\",\n          album: \"Wish You Were Here\",\n          songLength: \"5:07\",\n          releaseYear: \"1975\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd471822\",\n          title: \"Morning Bell\",\n          artist: \"Radiohead\",\n          album: \"Kid A\",\n          songLength: \"4:35\",\n          releaseYear: \"2000\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd471819\",\n          title: \"Wish You Were Here\",\n          artist: \"Pink Floyd\",\n          album: \"Wish You Were Here\",\n          songLength: \"5:41\",\n          releaseYear: \"1975\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd47181a\",\n          title: \"Bigmouth Strikes Again\",\n          artist: \"The Smiths\",\n          album: \"The Queen Is Dead\",\n          songLength: \"3:12\",\n          releaseYear: \"1986\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd47182a\",\n          title: \"Weird Fishes/Arpeggi\",\n          artist: \"Radiohead\",\n          album: \"In Rainbows\",\n          songLength: \"5:18\",\n          releaseYear: \"2007\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd471815\",\n          title: \"Time\",\n          artist: \"Pink Floyd\",\n          album: \"The Dark Side of the Moon\",\n          songLength: \"6:52\",\n          releaseYear: \"1973\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd47181f\",\n          title: \"Heaven Knows I'm Miserable Now\",\n          artist: \"The Smiths\",\n          album: \"Hatful of Hollow\",\n          songLength: \"3:35\",\n          releaseYear: \"1984\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd471821\",\n          title: \"Optimistic\",\n          artist: \"Radiohead\",\n          album: \"Kid A\",\n          songLength: \"5:15\",\n          releaseYear: \"2000\",\n        },\n        {\n          _id: \"5b21ca3eeb7f6fbccd47181b\",\n          title: \"There Is a Light That Never Goes Out\",\n          artist: \"The Smiths\",\n          album: \"The Queen Is Dead\",\n          songLength: \"4:02\",\n          releaseYear: \"1986\",\n        },\n      ])\n    );\n  }),\n];\n\n// export const handlers = [\n//   rest.post(\"http://localhost:8080/api/save\", async (req, res, ctx) => {\n//     return res(\n//       ctx.delay(500),\n//       ctx.json({\n//         msg: \"Data has been saved!\",\n//       })\n//     );\n//   }),\n//   rest.post(\"http://localhost:8080/api/save\", (req, res, ctx) => {\n//     return res(\n//       ctx.status(500),\n//       ctx.json({\n//         msg: \"Sorry, an internal server error has occurred\",\n//       })\n//     );\n//   }),\n//   rest.post(\"http://localhost:8080/api/auth\", (req, res, ctx) => {\n//     return res(ctx.status(200), ctx.json({ mockToken: \"mockToken\" }));\n//   }),\n//   rest.post(\"http://localhost:8080/api/auth\", (req, res, ctx) => {\n//     return res(ctx.status(401));\n//   }),\n//   rest.post(\"http://localhost:8080/api/login\", (req, res, ctx) => {\n//     const mockToken = \"mockToken\";\n//     const user = {\n//       username: \"mockUsername\",\n//     };\n//     return res(\n//       ctx.cookie(\"mockToken\", mockToken, {\n//         expires: new Date(new Date().getTime() + 31557600000),\n//         origin: \"http://localhost:3000\",\n//         sameSite: \"strict\",\n//         secure: true,\n//         httpOnly: true,\n//       }),\n//       ctx.status(202),\n//       ctx.json({ user })\n//     );\n//   }),\n//   rest.post(\"http://localhost:8080/api/logout\", (req, res, ctx) => {\n//     return res(ctx.json(\"mockLogout Success\"));\n//   }),\n//   rest.post(\"http://localhost:8080/api/clear-cookies\", (req, res, ctx) => {\n//     return res(ctx.json(\"mockLogout Success\"));\n//   }),\n//   rest.get(\"http://localhost:8080/api/songs\", (req, res, ctx) => {\n//     return res(\n//       ctx.status(200),\n//       ctx.json([\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47182b\",\n//           title: \"House Of Cards\",\n//           artist: \"Radiohead\",\n//           album: \"In Rainbows\",\n//           songLength: \"5:28\",\n//           releaseYear: \"2007\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471816\",\n//           title: \"Money\",\n//           artist: \"Pink Floyd\",\n//           album: \"The Dark Side of the Moon\",\n//           songLength: \"6:22\",\n//           releaseYear: \"1973\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181e\",\n//           title: \"What Difference Does It Make?\",\n//           artist: \"The Smiths\",\n//           album: \"Hatful of Hollow\",\n//           songLength: \"3:51\",\n//           releaseYear: \"1984\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471817\",\n//           title: \"Have a Cigar\",\n//           artist: \"Pink Floyd\",\n//           album: \"Wish You Were Here\",\n//           songLength: \"5:07\",\n//           releaseYear: \"1975\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471822\",\n//           title: \"Morning Bell\",\n//           artist: \"Radiohead\",\n//           album: \"Kid A\",\n//           songLength: \"4:35\",\n//           releaseYear: \"2000\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471819\",\n//           title: \"Wish You Were Here\",\n//           artist: \"Pink Floyd\",\n//           album: \"Wish You Were Here\",\n//           songLength: \"5:41\",\n//           releaseYear: \"1975\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181a\",\n//           title: \"Bigmouth Strikes Again\",\n//           artist: \"The Smiths\",\n//           album: \"The Queen Is Dead\",\n//           songLength: \"3:12\",\n//           releaseYear: \"1986\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47182a\",\n//           title: \"Weird Fishes/Arpeggi\",\n//           artist: \"Radiohead\",\n//           album: \"In Rainbows\",\n//           songLength: \"5:18\",\n//           releaseYear: \"2007\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471815\",\n//           title: \"Time\",\n//           artist: \"Pink Floyd\",\n//           album: \"The Dark Side of the Moon\",\n//           songLength: \"6:52\",\n//           releaseYear: \"1973\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181f\",\n//           title: \"Heaven Knows I'm Miserable Now\",\n//           artist: \"The Smiths\",\n//           album: \"Hatful of Hollow\",\n//           songLength: \"3:35\",\n//           releaseYear: \"1984\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd471821\",\n//           title: \"Optimistic\",\n//           artist: \"Radiohead\",\n//           album: \"Kid A\",\n//           songLength: \"5:15\",\n//           releaseYear: \"2000\",\n//         },\n//         {\n//           _id: \"5b21ca3eeb7f6fbccd47181b\",\n//           title: \"There Is a Light That Never Goes Out\",\n//           artist: \"The Smiths\",\n//           album: \"The Queen Is Dead\",\n//           songLength: \"4:02\",\n//           releaseYear: \"1986\",\n//         },\n//       ])\n//     );\n//   }),\n//   rest.get(\"http://localhost:8080/api/songs\", (req, res, ctx) => {\n//     return res(ctx.status(500), ctx.json({ msg: \"Error retrieving songs\" }));\n//   }),\n// ];\n"]},"metadata":{},"sourceType":"module"}