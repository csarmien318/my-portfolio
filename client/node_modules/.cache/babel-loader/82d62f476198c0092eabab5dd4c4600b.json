{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.headersToString = void 0;\n\nvar headersToList_1 = require(\"./headersToList\");\n/**\n * Converts a given `Headers` instance to its string representation.\n */\n\n\nfunction headersToString(headers) {\n  var list = headersToList_1.headersToList(headers);\n  var lines = list.map(function (_a) {\n    var _b = __read(_a, 2),\n        name = _b[0],\n        value = _b[1];\n\n    var values = [].concat(value);\n    return name + \": \" + values.join(', ');\n  });\n  return lines.join('\\r\\n');\n}\n\nexports.headersToString = headersToString;","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/node_modules/headers-polyfill/lib/transformers/headersToString.js"],"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","Object","defineProperty","exports","headersToString","headersToList_1","require","headers","list","headersToList","lines","map","_a","_b","name","values","concat","join"],"mappings":"AAAA;;AACA,IAAIA,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClD,MAAIC,CAAC,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgCH,CAAC,CAACG,MAAM,CAACC,QAAR,CAAzC;AACA,MAAI,CAACF,CAAL,EAAQ,OAAOF,CAAP;AACR,MAAIK,CAAC,GAAGH,CAAC,CAACI,IAAF,CAAON,CAAP,CAAR;AAAA,MAAmBO,CAAnB;AAAA,MAAsBC,EAAE,GAAG,EAA3B;AAAA,MAA+BC,CAA/B;;AACA,MAAI;AACA,WAAO,CAACR,CAAC,KAAK,KAAK,CAAX,IAAgBA,CAAC,KAAK,CAAvB,KAA6B,CAAC,CAACM,CAAC,GAAGF,CAAC,CAACK,IAAF,EAAL,EAAeC,IAApD,EAA0DH,EAAE,CAACI,IAAH,CAAQL,CAAC,CAACM,KAAV;AAC7D,GAFD,CAGA,OAAOC,KAAP,EAAc;AAAEL,IAAAA,CAAC,GAAG;AAAEK,MAAAA,KAAK,EAAEA;AAAT,KAAJ;AAAuB,GAHvC,SAIQ;AACJ,QAAI;AACA,UAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAR,KAAiBT,CAAC,GAAGG,CAAC,CAAC,QAAD,CAAtB,CAAJ,EAAuCH,CAAC,CAACI,IAAF,CAAOD,CAAP;AAC1C,KAFD,SAGQ;AAAE,UAAII,CAAJ,EAAO,MAAMA,CAAC,CAACK,KAAR;AAAgB;AACpC;;AACD,SAAON,EAAP;AACH,CAfD;;AAgBAO,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEJ,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAI,OAAO,CAACC,eAAR,GAA0B,KAAK,CAA/B;;AACA,IAAIC,eAAe,GAAGC,OAAO,CAAC,iBAAD,CAA7B;AACA;AACA;AACA;;;AACA,SAASF,eAAT,CAAyBG,OAAzB,EAAkC;AAC9B,MAAIC,IAAI,GAAGH,eAAe,CAACI,aAAhB,CAA8BF,OAA9B,CAAX;AACA,MAAIG,KAAK,GAAGF,IAAI,CAACG,GAAL,CAAS,UAAUC,EAAV,EAAc;AAC/B,QAAIC,EAAE,GAAG5B,MAAM,CAAC2B,EAAD,EAAK,CAAL,CAAf;AAAA,QAAwBE,IAAI,GAAGD,EAAE,CAAC,CAAD,CAAjC;AAAA,QAAsCd,KAAK,GAAGc,EAAE,CAAC,CAAD,CAAhD;;AACA,QAAIE,MAAM,GAAG,GAAGC,MAAH,CAAUjB,KAAV,CAAb;AACA,WAAOe,IAAI,GAAG,IAAP,GAAcC,MAAM,CAACE,IAAP,CAAY,IAAZ,CAArB;AACH,GAJW,CAAZ;AAKA,SAAOP,KAAK,CAACO,IAAN,CAAW,MAAX,CAAP;AACH;;AACDd,OAAO,CAACC,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.headersToString = void 0;\nvar headersToList_1 = require(\"./headersToList\");\n/**\n * Converts a given `Headers` instance to its string representation.\n */\nfunction headersToString(headers) {\n    var list = headersToList_1.headersToList(headers);\n    var lines = list.map(function (_a) {\n        var _b = __read(_a, 2), name = _b[0], value = _b[1];\n        var values = [].concat(value);\n        return name + \": \" + values.join(', ');\n    });\n    return lines.join('\\r\\n');\n}\nexports.headersToString = headersToString;\n"]},"metadata":{},"sourceType":"script"}