{"ast":null,"code":"var _jsxFileName = \"/Users/chritsophersarmiento/git/my-portfolio/src/pages/Songs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Page from \"../components/Page\";\nimport SongsListGroup from \"../components/SongsListGroup\";\nimport SongsTable from \"../components/SongsTable\";\nimport { Col, Container, Row, Placeholder } from \"react-bootstrap\";\nimport useAuth from \"../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Songs = () => {\n  _s();\n\n  const [getApiSongs, setApiSongs] = useState([]);\n  const [allSongs, setAllSongs] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(\"All Artists\");\n  const [pageNumber, setPageNumber] = useState(0);\n  const [loader, setLoader] = useState(false);\n  const [sortColumn, setSortColumn] = useState({\n    path: \"\",\n    order: \"ascending\"\n  });\n  const {\n    handleLogout\n  } = useAuth();\n  useEffect(() => {\n    async function getSongsData() {\n      let mounted = true;\n      setLoader(true);\n      await axios.get(\"http://localhost:8080/api/songs\", {\n        withCredentials: true\n      }).then(response => {\n        if (mounted) {\n          const {\n            data\n          } = response;\n          setAllSongs(data);\n          setApiSongs(data);\n          setLoader(false); // return data;\n        }\n      }).catch(err => {\n        const {\n          status\n        } = err === null || err === void 0 ? void 0 : err.response;\n        setLoader(false);\n        console.log(err);\n\n        if (status === 401 || status === 403) {\n          alert(\"Unauthorized\"); // window.location.reload();\n        }\n\n        if (status === 400) {\n          alert(\"Unauthorized\"); // window.location.reload();\n\n          handleLogout();\n        } else {\n          // window.location.reload();\n          alert(\"An internal server error occurred.\");\n          handleLogout();\n        } // return status;\n\n      });\n      return () => {\n        mounted = false;\n      };\n    }\n\n    getSongsData();\n  }, []);\n  useEffect(() => {\n    setAllSongs(getApiSongs);\n    setPageNumber(0);\n    setSortColumn({\n      path: \"\",\n      order: \"ascending\"\n    });\n  }, [selectedArtist]); // const getSongsData = async () => {\n  //   await axios\n  //     .get(\"http://localhost:8080/api/songs\")\n  //     .then((response) => {\n  //       const songsData = response.data;\n  //       setAllSongs(songsData);\n  //       setApiSongs(songsData);\n  //     })\n  //     .catch((err) => {\n  //       const { status } = err.response;\n  //       console.log(err);\n  //       if (status === 401 || status === 403) {\n  //         window.location.reload();\n  //       }\n  //       if (status === 400) {\n  //         alert(\"Unauthorized\");\n  //         window.location.reload();\n  //         handleLogout();\n  //       } else {\n  //         window.location.reload();\n  //         alert(\"An internal server error occurred.\");\n  //         handleLogout();\n  //       }\n  //     });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Tabled Data\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      style: {\n        maxWidth: \"2000px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [loader && /*#__PURE__*/_jsxDEV(Placeholder, {\n          as: \"p\",\n          animation: \"glow\",\n          children: /*#__PURE__*/_jsxDEV(Placeholder, {\n            xs: 12,\n            bg: \"dark\",\n            size: \"lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), !loader && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 3,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(SongsListGroup, {\n              onArtistSelect: setSelectedArtist,\n              selectedArtist: selectedArtist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 9,\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(SongsTable, {\n              allSongs: allSongs,\n              setAllSongs: setAllSongs,\n              selectedArtist: selectedArtist,\n              pageNumber: pageNumber,\n              setPageNumber: setPageNumber,\n              sortColumn: sortColumn,\n              setSortColumn: setSortColumn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Songs, \"bh4tGxtsJ6afr8Vcl0C4dt0pkdA=\", false, function () {\n  return [useAuth];\n});\n\n_c = Songs;\nexport default Songs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/pages/Songs.jsx"],"names":["React","useState","useEffect","axios","Page","SongsListGroup","SongsTable","Col","Container","Row","Placeholder","useAuth","Songs","getApiSongs","setApiSongs","allSongs","setAllSongs","selectedArtist","setSelectedArtist","pageNumber","setPageNumber","loader","setLoader","sortColumn","setSortColumn","path","order","handleLogout","getSongsData","mounted","get","withCredentials","then","response","data","catch","err","status","console","log","alert","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Page from \"../components/Page\";\nimport SongsListGroup from \"../components/SongsListGroup\";\nimport SongsTable from \"../components/SongsTable\";\nimport { Col, Container, Row, Placeholder } from \"react-bootstrap\";\nimport useAuth from \"../hooks/useAuth\";\n\nconst Songs = () => {\n  const [getApiSongs, setApiSongs] = useState([]);\n  const [allSongs, setAllSongs] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(\"All Artists\");\n  const [pageNumber, setPageNumber] = useState(0);\n  const [loader, setLoader] = useState(false);\n  const [sortColumn, setSortColumn] = useState({\n    path: \"\",\n    order: \"ascending\",\n  });\n\n  const { handleLogout } = useAuth();\n\n  useEffect(() => {\n    async function getSongsData() {\n      let mounted = true;\n      setLoader(true);\n      await axios\n        .get(\"http://localhost:8080/api/songs\", {\n          withCredentials: true,\n        })\n        .then((response) => {\n          if (mounted) {\n            const { data } = response;\n            setAllSongs(data);\n            setApiSongs(data);\n            setLoader(false);\n            // return data;\n          }\n        })\n        .catch((err) => {\n          const { status } = err?.response;\n          setLoader(false);\n          console.log(err);\n          if (status === 401 || status === 403) {\n            alert(\"Unauthorized\");\n            // window.location.reload();\n          }\n          if (status === 400) {\n            alert(\"Unauthorized\");\n            // window.location.reload();\n            handleLogout();\n          } else {\n            // window.location.reload();\n            alert(\"An internal server error occurred.\");\n            handleLogout();\n          }\n          // return status;\n        });\n      return () => {\n        mounted = false;\n      };\n    }\n    getSongsData();\n  }, []);\n\n  useEffect(() => {\n    setAllSongs(getApiSongs);\n    setPageNumber(0);\n    setSortColumn({ path: \"\", order: \"ascending\" });\n  }, [selectedArtist]);\n\n  // const getSongsData = async () => {\n  //   await axios\n  //     .get(\"http://localhost:8080/api/songs\")\n  //     .then((response) => {\n  //       const songsData = response.data;\n  //       setAllSongs(songsData);\n  //       setApiSongs(songsData);\n  //     })\n  //     .catch((err) => {\n  //       const { status } = err.response;\n  //       console.log(err);\n  //       if (status === 401 || status === 403) {\n  //         window.location.reload();\n  //       }\n  //       if (status === 400) {\n  //         alert(\"Unauthorized\");\n  //         window.location.reload();\n  //         handleLogout();\n  //       } else {\n  //         window.location.reload();\n  //         alert(\"An internal server error occurred.\");\n  //         handleLogout();\n  //       }\n  //     });\n  // };\n\n  return (\n    <Page title=\"Tabled Data\">\n      <Container fluid style={{ maxWidth: \"2000px\" }}>\n        <Row>\n          {loader && (\n            <Placeholder as=\"p\" animation=\"glow\">\n              <Placeholder xs={12} bg=\"dark\" size=\"lg\" />\n            </Placeholder>\n          )}\n          {!loader && (\n            <>\n              <Col xs={3} md={2}>\n                <SongsListGroup\n                  onArtistSelect={setSelectedArtist}\n                  selectedArtist={selectedArtist}\n                />\n              </Col>\n              <Col xs={9} md={10}>\n                <SongsTable\n                  allSongs={allSongs}\n                  setAllSongs={setAllSongs}\n                  selectedArtist={selectedArtist}\n                  pageNumber={pageNumber}\n                  setPageNumber={setPageNumber}\n                  sortColumn={sortColumn}\n                  setSortColumn={setSortColumn}\n                />\n              </Col>\n            </>\n          )}\n        </Row>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Songs;\n"]},"metadata":{},"sourceType":"module"}