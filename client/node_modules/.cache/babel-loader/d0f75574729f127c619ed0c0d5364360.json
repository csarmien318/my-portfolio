{"ast":null,"code":"var _jsxFileName = \"/Users/chritsophersarmiento/git/my-portfolio/src/components/Paginate.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport PageItem from \"react-bootstrap/PageItem\";\nimport styles from \"../css/Pagination.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Paginate = _ref => {\n  let {\n    pageNumber,\n    songs,\n    songsPerPage,\n    onPageChange\n  } = _ref;\n  const pageCount = Math.ceil(songs.length / songsPerPage);\n  if (pageCount === 1) return null;\n  let active = pageNumber;\n  let items = [];\n\n  for (let number = 0; number < pageCount; number++) {\n    items.push( /*#__PURE__*/_jsxDEV(PageItem, {\n      active: number === active,\n      onClick: () => onPageChange(number),\n      children: number + 1\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this));\n  }\n\n  const paginationBasic = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: \"15px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      className: `${styles.pagination}`,\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n\n  return paginationBasic;\n};\n_c = Paginate;\nPaginate.propTypes = {\n  pageNumber: PropTypes.number.isRequired,\n  songs: PropTypes.array.isRequired,\n  songsPerPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/components/Paginate.jsx"],"names":["React","PropTypes","Pagination","PageItem","styles","Paginate","pageNumber","songs","songsPerPage","onPageChange","pageCount","Math","ceil","length","active","items","number","push","paginationBasic","paddingLeft","pagination","propTypes","isRequired","array","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAuD;AAAA,MAAtD;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,YAArB;AAAmCC,IAAAA;AAAnC,GAAsD;AAC7E,QAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,CAACM,MAAN,GAAeL,YAAzB,CAAlB;AACA,MAAIE,SAAS,KAAK,CAAlB,EAAqB,OAAO,IAAP;AACrB,MAAII,MAAM,GAAGR,UAAb;AACA,MAAIS,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGN,SAA9B,EAAyCM,MAAM,EAA/C,EAAmD;AACjDD,IAAAA,KAAK,CAACE,IAAN,eACE,QAAC,QAAD;AAEE,MAAA,MAAM,EAAED,MAAM,KAAKF,MAFrB;AAGE,MAAA,OAAO,EAAE,MAAML,YAAY,CAACO,MAAD,CAH7B;AAAA,gBAKGA,MAAM,GAAG;AALZ,OACOA,MADP;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAED,QAAME,eAAe,gBACnB;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAZ;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAG,GAAEf,MAAM,CAACgB,UAAW,EAA5C;AAAA,gBAAgDL;AAAhD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAOA,SAAOG,eAAP;AACD,CAzBM;KAAMb,Q;AA2BbA,QAAQ,CAACgB,SAAT,GAAqB;AACnBf,EAAAA,UAAU,EAAEL,SAAS,CAACe,MAAV,CAAiBM,UADV;AAEnBf,EAAAA,KAAK,EAAEN,SAAS,CAACsB,KAAV,CAAgBD,UAFJ;AAGnBd,EAAAA,YAAY,EAAEP,SAAS,CAACe,MAAV,CAAiBM,UAHZ;AAInBb,EAAAA,YAAY,EAAER,SAAS,CAACuB,IAAV,CAAeF;AAJV,CAArB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport PageItem from \"react-bootstrap/PageItem\";\nimport styles from \"../css/Pagination.module.css\";\n\nexport const Paginate = ({ pageNumber, songs, songsPerPage, onPageChange }) => {\n  const pageCount = Math.ceil(songs.length / songsPerPage);\n  if (pageCount === 1) return null;\n  let active = pageNumber;\n  let items = [];\n  for (let number = 0; number < pageCount; number++) {\n    items.push(\n      <PageItem\n        key={number}\n        active={number === active}\n        onClick={() => onPageChange(number)}\n      >\n        {number + 1}\n      </PageItem>\n    );\n  }\n\n  const paginationBasic = (\n    <div style={{ paddingLeft: \"15px\" }}>\n      <Pagination className={`${styles.pagination}`}>{items}</Pagination>\n      <br />\n    </div>\n  );\n\n  return paginationBasic;\n};\n\nPaginate.propTypes = {\n  pageNumber: PropTypes.number.isRequired,\n  songs: PropTypes.array.isRequired,\n  songsPerPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}