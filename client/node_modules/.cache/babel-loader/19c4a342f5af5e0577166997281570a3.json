{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\nconst authedSession = cookies.get(\"authedSession\"); // const authedToken = cookies.get(\"authedToken\");\n// const refreshToken = cookies.get(\"refreshToken\");\n\nconst useAuth = () => {\n  _s();\n\n  const [isUser, setIsUser] = useState(authedSession);\n  const [user, setUser] = useState(localStorage.getItem(\"user\"));\n  const checkUser = localStorage.getItem(\"user\");\n  useEffect(() => {\n    if (checkUser) {\n      console.log(\"checkUser: \", checkUser);\n      const currentUser = JSON.parse(checkUser);\n      setUser(currentUser);\n      setIsUser(authedSession);\n    } else {\n      setUser();\n      setIsUser(false);\n    }\n  }, []);\n  useEffect(async () => {\n    console.log(\"User: \", user);\n\n    if (!authedSession && checkUser) {\n      try {\n        const response = await axios.post(\"/api/auth\", cookies.get(\"refreshToken\"));\n        console.log(response.data);\n      } catch (err) {\n        console.log(\"Error: \" + err);\n      }\n    }\n  });\n\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await axios.post(\"/api/login\", JSON.stringify({\n        username,\n        password\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      window.location.reload();\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      localStorage.setItem(\"userToken\", JSON.stringify(cookies.get(\"accessToken\")));\n      setUser(response.data.user);\n      setIsUser(true);\n    } catch (err) {\n      var _err$response, _err$response2;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        alert(\"An unexpected error occurred. Please try again later.\");\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        alert(\"Missing Username or Password\");\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        alert(\"Incorrect username or password\");\n        console.log(\"Incorrect username or password\");\n      } else {\n        alert(\"Login Failed\");\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    axios.delete(\"/api/clear-cookies\");\n    axios.get(\"/api/logout\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => {\n      localStorage.clear();\n      console.log(\"Logged out successfully.\");\n    }).catch(() => {\n      console.log(\"An internal server error has occurred.\");\n    });\n    localStorage.clear();\n    setUser(false);\n  };\n\n  return {\n    user,\n    isUser,\n    setUser,\n    setIsUser,\n    handleLogin,\n    handleLogout\n  };\n};\n\n_s(useAuth, \"GM3siYQSRS2cJZAX8avTZKF1s98=\");\n\nexport default useAuth; // TODO: Make a function validateInput that checks\n// const validateInput = (username, password) => {\n//   if (!(username has a number && lowercase letters)) {\n//     return false;\n//   }\n//   if (!(password has numbers && has uppercase letters && lowercase letters)) {\n//     return false;\n//   }\n//\n//   return true;\n// }","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/hooks/useAuth.js"],"names":["useState","useEffect","axios","Cookies","cookies","authedSession","get","useAuth","isUser","setIsUser","user","setUser","localStorage","getItem","checkUser","console","log","currentUser","JSON","parse","response","post","data","err","handleLogin","username","password","stringify","headers","window","location","reload","setItem","alert","status","handleLogout","delete","then","clear","catch"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n\nconst authedSession = cookies.get(\"authedSession\");\n// const authedToken = cookies.get(\"authedToken\");\n// const refreshToken = cookies.get(\"refreshToken\");\n\nconst useAuth = () => {\n  const [isUser, setIsUser] = useState(authedSession);\n  const [user, setUser] = useState(localStorage.getItem(\"user\"));\n\n  const checkUser = localStorage.getItem(\"user\");\n\n  useEffect(() => {\n    if (checkUser) {\n      console.log(\"checkUser: \", checkUser);\n      const currentUser = JSON.parse(checkUser);\n      setUser(currentUser);\n      setIsUser(authedSession);\n    } else {\n      setUser();\n      setIsUser(false);\n    }\n  }, []);\n\n  useEffect(async () => {\n    console.log(\"User: \", user);\n    if (!authedSession && checkUser) {\n      try {\n        const response = await axios.post(\n          \"/api/auth\",\n          cookies.get(\"refreshToken\")\n        );\n        console.log(response.data);\n      } catch (err) {\n        console.log(\"Error: \" + err);\n      }\n    }\n  });\n\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await axios.post(\n        \"/api/login\",\n        JSON.stringify({ username, password }),\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n        }\n      );\n\n      window.location.reload();\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      localStorage.setItem(\n        \"userToken\",\n        JSON.stringify(cookies.get(\"accessToken\"))\n      );\n\n      setUser(response.data.user);\n      setIsUser(true);\n    } catch (err) {\n      if (!err?.response) {\n        alert(\"An unexpected error occurred. Please try again later.\");\n      } else if (err.response?.status === 400) {\n        alert(\"Missing Username or Password\");\n      } else if (err.response?.status === 401) {\n        alert(\"Incorrect username or password\");\n        console.log(\"Incorrect username or password\");\n      } else {\n        alert(\"Login Failed\");\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    axios.delete(\"/api/clear-cookies\");\n    axios\n      .get(\"/api/logout\", {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then(() => {\n        localStorage.clear();\n        console.log(\"Logged out successfully.\");\n      })\n      .catch(() => {\n        console.log(\"An internal server error has occurred.\");\n      });\n\n    localStorage.clear();\n    setUser(false);\n  };\n\n  return {\n    user,\n    isUser,\n    setUser,\n    setIsUser,\n    handleLogin,\n    handleLogout,\n  };\n};\n\nexport default useAuth;\n\n// TODO: Make a function validateInput that checks\n// const validateInput = (username, password) => {\n//   if (!(username has a number && lowercase letters)) {\n//     return false;\n//   }\n//   if (!(password has numbers && has uppercase letters && lowercase letters)) {\n//     return false;\n//   }\n//\n//   return true;\n// }\n"]},"metadata":{},"sourceType":"module"}