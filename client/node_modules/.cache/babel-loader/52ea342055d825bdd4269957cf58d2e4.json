{"ast":null,"code":"var _jsxFileName = \"/Users/chritsophersarmiento/git/my-portfolio/src/components/SongsTable.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paginate from \"./Paginate\";\nimport SongsTableHeader from \"./SongsTableHeader\";\nimport styles from \"../css/Songs.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongsTable = _ref => {\n  let {\n    selectedArtist,\n    pageNumber,\n    setPageNumber,\n    allSongs,\n    setAllSongs,\n    sortColumn,\n    setSortColumn\n  } = _ref;\n  const songs = selectedArtist !== \"All Artists\" ? allSongs.filter(s => s.artist === selectedArtist) : allSongs;\n  const songsPerPage = 4;\n  const pagesVisited = pageNumber * songsPerPage;\n\n  const pageChange = selected => {\n    setPageNumber(selected);\n  };\n\n  const displaySongs = songs.slice(pagesVisited, pagesVisited + songsPerPage).map(song => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: song.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: song.artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: song.album\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: song.songLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: song.releaseYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, song._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        padding: \"12px 0 0 14px\"\n      },\n      children: [\"Showing \", songs.length, \" songs in the database.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `table-responsive ${styles.divBox}`,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: `table table-hover table-striped ${styles.tableBox}`,\n        children: [/*#__PURE__*/_jsxDEV(SongsTableHeader, {\n          songs: songs,\n          setAllSongs: setAllSongs,\n          sortColumn: sortColumn,\n          setSortColumn: setSortColumn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: displaySongs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paginate, {\n      songs: songs,\n      songsPerPage: songsPerPage,\n      pageNumber: pageNumber,\n      onPageChange: pageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SongsTable;\nexport default SongsTable;\nSongsTable.propTypes = {\n  selectedArtist: PropTypes.string.isRequired,\n  pageNumber: PropTypes.number.isRequired,\n  setPageNumber: PropTypes.func.isRequired,\n  allSongs: PropTypes.array.isRequired,\n  setAllSongs: PropTypes.func.isRequired,\n  sortColumn: PropTypes.object.isRequired,\n  setSortColumn: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SongsTable\");","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/components/SongsTable.jsx"],"names":["React","PropTypes","Paginate","SongsTableHeader","styles","SongsTable","selectedArtist","pageNumber","setPageNumber","allSongs","setAllSongs","sortColumn","setSortColumn","songs","filter","s","artist","songsPerPage","pagesVisited","pageChange","selected","displaySongs","slice","map","song","title","album","songLength","releaseYear","_id","padding","length","divBox","tableBox","propTypes","string","isRequired","number","func","array","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paginate from \"./Paginate\";\nimport SongsTableHeader from \"./SongsTableHeader\";\nimport styles from \"../css/Songs.module.css\";\n\nconst SongsTable = ({\n  selectedArtist,\n  pageNumber,\n  setPageNumber,\n  allSongs,\n  setAllSongs,\n  sortColumn,\n  setSortColumn,\n}) => {\n  const songs =\n    selectedArtist !== \"All Artists\"\n      ? allSongs.filter((s) => s.artist === selectedArtist)\n      : allSongs;\n\n  const songsPerPage = 4;\n  const pagesVisited = pageNumber * songsPerPage;\n\n  const pageChange = (selected) => {\n    setPageNumber(selected);\n  };\n\n  const displaySongs = songs\n    .slice(pagesVisited, pagesVisited + songsPerPage)\n    .map((song) => (\n      <tr key={song._id}>\n        <td>{song.title}</td>\n        <td>{song.artist}</td>\n        <td>{song.album}</td>\n        <td>{song.songLength}</td>\n        <td>{song.releaseYear}</td>\n      </tr>\n    ));\n\n  return (\n    <div>\n      <p style={{ padding: \"12px 0 0 14px\" }}>\n        Showing {songs.length} songs in the database.\n      </p>\n      <div className={`table-responsive ${styles.divBox}`}>\n        <table className={`table table-hover table-striped ${styles.tableBox}`}>\n          <SongsTableHeader\n            songs={songs}\n            setAllSongs={setAllSongs}\n            sortColumn={sortColumn}\n            setSortColumn={setSortColumn}\n          />\n          <tbody>{displaySongs}</tbody>\n        </table>\n      </div>\n      <Paginate\n        songs={songs}\n        songsPerPage={songsPerPage}\n        pageNumber={pageNumber}\n        onPageChange={pageChange}\n      />\n    </div>\n  );\n};\n\nexport default SongsTable;\n\nSongsTable.propTypes = {\n  selectedArtist: PropTypes.string.isRequired,\n  pageNumber: PropTypes.number.isRequired,\n  setPageNumber: PropTypes.func.isRequired,\n  allSongs: PropTypes.array.isRequired,\n  setAllSongs: PropTypes.func.isRequired,\n  sortColumn: PropTypes.object.isRequired,\n  setSortColumn: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}