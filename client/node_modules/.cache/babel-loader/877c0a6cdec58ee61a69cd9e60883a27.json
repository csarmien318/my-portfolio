{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\nconst authedSession = cookies.get(\"authedSession\"); // const authedToken = cookies.get(\"authedToken\");\n\nconst useAuth = () => {\n  _s();\n\n  const [isUser, setIsUser] = useState(authedSession);\n  const [user, setUser] = useState(() => {\n    if (!isUser) return \"\";\n    return localStorage.getItem(\"user\");\n  });\n  useEffect(() => {\n    if (authedSession) {\n      const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n      setUser(currentUser);\n      setIsUser(authedSession);\n    } else {\n      setUser();\n      setIsUser(false);\n    }\n  }, []);\n\n  const handleLogout = async () => {\n    await axios.get(\"/api/logout\", user, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => {\n      localStorage.clear();\n      console.log(\"Logged out successfully.\");\n    }).catch(() => {\n      console.log(\"An internal server error has occurred.\");\n    });\n    localStorage.clear();\n    setUser(\"\");\n    setIsUser(false);\n  }; // useEffect(() => {\n  //   const activeUser = user;\n  //   console.log(\"Logged in user: \", activeUser);\n  // }, [user]);\n\n\n  return {\n    user,\n    isUser,\n    setUser,\n    setIsUser,\n    handleLogout\n  };\n};\n\n_s(useAuth, \"de0lhUgR+kUI0OMxVcPRjGZSBMY=\");\n\nexport default useAuth;","map":{"version":3,"sources":["/Users/chritsophersarmiento/git/my-portfolio/src/hooks/useAuth.js"],"names":["useState","useEffect","axios","Cookies","cookies","authedSession","get","useAuth","isUser","setIsUser","user","setUser","localStorage","getItem","currentUser","JSON","parse","handleLogout","headers","then","clear","console","log","catch"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AAEA,MAAME,aAAa,GAAGD,OAAO,CAACE,GAAR,CAAY,eAAZ,CAAtB,C,CACA;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACK,aAAD,CAApC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,MAAM;AACrC,QAAI,CAACQ,MAAL,EAAa,OAAO,EAAP;AACb,WAAOI,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAP;AACD,GAH+B,CAAhC;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,aAAJ,EAAmB;AACjB,YAAMS,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAApB;AACAF,MAAAA,OAAO,CAACG,WAAD,CAAP;AACAL,MAAAA,SAAS,CAACJ,aAAD,CAAT;AACD,KAJD,MAIO;AACLM,MAAAA,OAAO;AACPF,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GATQ,EASN,EATM,CAAT;;AAWA,QAAMQ,YAAY,GAAG,YAAY;AAC/B,UAAMf,KAAK,CACRI,GADG,CACC,aADD,EACgBI,IADhB,EACsB;AACxBQ,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AADe,KADtB,EAIHC,IAJG,CAIE,MAAM;AACVP,MAAAA,YAAY,CAACQ,KAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,KAPG,EAQHC,KARG,CAQG,MAAM;AACXF,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACD,KAVG,CAAN;AAYAV,IAAAA,YAAY,CAACQ,KAAb;AACAT,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAhBD,CAlBoB,CAoCpB;AACA;AACA;AACA;;;AAEA,SAAO;AACLC,IAAAA,IADK;AAELF,IAAAA,MAFK;AAGLG,IAAAA,OAHK;AAILF,IAAAA,SAJK;AAKLQ,IAAAA;AALK,GAAP;AAOD,CAhDD;;GAAMV,O;;AAkDN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n\nconst authedSession = cookies.get(\"authedSession\");\n// const authedToken = cookies.get(\"authedToken\");\n\nconst useAuth = () => {\n  const [isUser, setIsUser] = useState(authedSession);\n  const [user, setUser] = useState(() => {\n    if (!isUser) return \"\";\n    return localStorage.getItem(\"user\");\n  });\n\n  useEffect(() => {\n    if (authedSession) {\n      const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n      setUser(currentUser);\n      setIsUser(authedSession);\n    } else {\n      setUser();\n      setIsUser(false);\n    }\n  }, []);\n\n  const handleLogout = async () => {\n    await axios\n      .get(\"/api/logout\", user, {\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      .then(() => {\n        localStorage.clear();\n        console.log(\"Logged out successfully.\");\n      })\n      .catch(() => {\n        console.log(\"An internal server error has occurred.\");\n      });\n\n    localStorage.clear();\n    setUser(\"\");\n    setIsUser(false);\n  };\n\n  // useEffect(() => {\n  //   const activeUser = user;\n  //   console.log(\"Logged in user: \", activeUser);\n  // }, [user]);\n\n  return {\n    user,\n    isUser,\n    setUser,\n    setIsUser,\n    handleLogout,\n  };\n};\n\nexport default useAuth;\n"]},"metadata":{},"sourceType":"module"}